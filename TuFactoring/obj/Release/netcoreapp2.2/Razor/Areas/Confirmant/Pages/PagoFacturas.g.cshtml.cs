#pragma checksum "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "fc988a8f8b2bc6ee01de1bee13106065721d0025"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(TuFactoring.Areas.Confirmant.Pages.Areas_Confirmant_Pages_PagoFacturas), @"mvc.1.0.razor-page", @"/Areas/Confirmant/Pages/PagoFacturas.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Areas/Confirmant/Pages/PagoFacturas.cshtml", typeof(TuFactoring.Areas.Confirmant.Pages.Areas_Confirmant_Pages_PagoFacturas), null)]
namespace TuFactoring.Areas.Confirmant.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fc988a8f8b2bc6ee01de1bee13106065721d0025", @"/Areas/Confirmant/Pages/PagoFacturas.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a91367a1958076cc8ce472bcf1aad08953ca148a", @"/Areas/Confirmant/Pages/_ViewImports.cshtml")]
    public class Areas_Confirmant_Pages_PagoFacturas : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-for", new global::Microsoft.AspNetCore.Html.HtmlString("banco in banks"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(":value", new global::Microsoft.AspNetCore.Html.HtmlString("banco.id"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", "~/js/Inversionista/Pagos.js", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
  
    ViewData["Title"] = Localizer.Text("titlePagoFactura");
    Layout = "~/Pages/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(183, 41, true);
            WriteLiteral("\r\n<v-app id=\"appPagoFacturasBanco\">\r\n    ");
            EndContext();
            BeginContext(225, 23, false);
#line 9 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
Write(Html.AntiForgeryToken());

#line default
#line hidden
            EndContext();
            BeginContext(248, 37, true);
            WriteLiteral("\r\n    <input hidden id=\"contenidoRaw\"");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 285, "\"", 309, 1);
#line 10 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
WriteAttributeValue("", 293, Model.JsonPagos, 293, 16, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(310, 187, true);
            WriteLiteral(" />\r\n    <div class=\"modal fade in fa fa-spinner\" v-if=\"cargando\" role=\"dialog\">\r\n        <div class=\"modal-dialog text-center\">\r\n\r\n            <h2 style=\"color:#000\"><span id=\"cargando\">");
            EndContext();
            BeginContext(498, 22, false);
#line 14 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                                                  Write(Localizer.Text("load"));

#line default
#line hidden
            EndContext();
            BeginContext(520, 99, true);
            WriteLiteral("</span></h2>\r\n        </div>\r\n    </div>\r\n\r\n    <div id=\"contenido\" hidden class=\"row\">\r\n\r\n        ");
            EndContext();
            BeginContext(620, 49, false);
#line 20 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
   Write(await Html.PartialAsync("_ModalLogoutPartial", 5));

#line default
#line hidden
            EndContext();
            BeginContext(669, 348, true);
            WriteLiteral(@"
        <div class=""col-md-12"">

            <div class=""d-sm-flex align-items-center justify-content-between mb-4"">
                <h1 class=""h3 mb-0 text-gray-800"">
                    <a href=""#"" class=""btn btn-success btn-circle"">
                        <i class=""fa fa-money""></i>
                    </a>
                    &nbsp;");
            EndContext();
            BeginContext(1018, 34, false);
#line 28 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                     Write(Localizer.Text("titlePayInvoices"));

#line default
#line hidden
            EndContext();
            BeginContext(1052, 330, true);
            WriteLiteral(@"
                </h1>
                <!--span style=""display: none;"">
                <a href=""#"" class=""d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm""><i class=""fas fa-download fa-sm text-white-50""></i> Generate Report</a>
            </span-->
            </div>
            <p class=""mb-4"">
               ");
            EndContext();
            BeginContext(1383, 33, false);
#line 35 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
          Write(Localizer.Text("textoPagosBanco"));

#line default
#line hidden
            EndContext();
            BeginContext(1416, 2612, true);
            WriteLiteral(@"
            </p>
            <!--las facturas son los receipts-->
            <v-data-table :headers=""headersReceiptsBanco""
                          :mobile-breakpoint=""widthTelefono""
                          :items=""receipts""
                          class=""elevation-1"">


                <template v-slot:item.n=""{ item }"">
                    {{receipts.indexOf(item) +1}}
                </template>

                <template v-slot:item.amount=""{ item }"">
                    <div class=""text-right"">
                        {{ item.currency.symbol }} {{ formatoMonedaInput(item.amount,lang, item.currency.digits) }}
                    </div>
                </template>

                <template v-slot:item.valorneto=""{ item }"">
                    <div class=""text-right"">

                        {{ item.currency.symbol }} {{ formatoMonedaInput(obtenerValorNet(item.publications),lang, item.currency.digits) }}
                    </div>
                </template>

             ");
            WriteLiteral(@"   <template v-slot:item.coin=""{item}"">
                    <v-chip small> <b>{{ item.currency.iso_4217 }} </b></v-chip>
                </template>

                <template v-slot:item.receiver.name=""{ item }"">
                    <div v-if=""item.receiving_account != null"">
                        {{item.receiving_account.accountNumber}} <br />
                        <small>{{ item.receiver.name }}</small>
                    </div>
                    <div v-else>{{ item.receiver.name }}</div>
                </template>

                <template v-slot:item.detail=""{ item }"">
                    <button type=""button"" v-on:click=""DetalleFacturas(item)"" class=""btn btn-sm btn-success""><i class=""fa fa-eye""></i></button>
                </template>

                <template v-slot:item.total=""{ item }"">
                    <div class=""text-right"" v-if=""item.paid != null && (item.paid + item.processing) > 0"">
                        {{ item.currency.symbol }} {{ formatoMonedaInput(item.pai");
            WriteLiteral(@"d + item.processing,lang, item.currency.digits) }}
                    </div>
                    <div class=""text-right"" v-else>
                        {{ item.currency.symbol }} 0
                    </div>
                </template>

                <template v-slot:item.pay=""{ item }"">
                    <span v-if=""item.state == 'draft'"">
                        <v-btn outlined block v-if=""item.method == 'TRANSFER'""
                               v-on:click=""DatosPanelTransferir(item)"" dark color=""#5867dd""><i class=""fa  fa-thumbs-o-up""></i>");
            EndContext();
            BeginContext(4029, 32, false);
#line 89 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                                                                                                                         Write(Localizer.Text("buttonTransfer"));

#line default
#line hidden
            EndContext();
            BeginContext(4061, 110, true);
            WriteLiteral("</v-btn>\r\n\r\n                            <v-btn block v-else v-on:click=\"BotonPago(item)\" dark color=\"#5867dd\">");
            EndContext();
            BeginContext(4172, 27, false);
#line 91 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                                                                                             Write(Localizer.Text("buttonPay"));

#line default
#line hidden
            EndContext();
            BeginContext(4199, 142, true);
            WriteLiteral("</v-btn>\r\n                        </span>\r\n                        <span v-else-if=\"item.state == \'processing\'\">\r\n                            ");
            EndContext();
            BeginContext(4342, 38, false);
#line 94 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                       Write(Localizer.Text("textoReceiptsProcess"));

#line default
#line hidden
            EndContext();
            BeginContext(4380, 130, true);
            WriteLiteral("\r\n                        </span>\r\n                        <span v-else-if=\"item.state == \'unpaid\'\">\r\n                            ");
            EndContext();
            BeginContext(4511, 37, false);
#line 97 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                       Write(Localizer.Text("textoReceiptsUnPaid"));

#line default
#line hidden
            EndContext();
            BeginContext(4548, 102, true);
            WriteLiteral("\r\n                        </span>\r\n                        <span v-else>\r\n                            ");
            EndContext();
            BeginContext(4651, 35, false);
#line 100 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                       Write(Localizer.Text("textoReceiptsPaid"));

#line default
#line hidden
            EndContext();
            BeginContext(4686, 381, true);
            WriteLiteral(@"
                        </span>
                    </template>
                </v-data-table>
            </div>

            <v-dialog v-model=""dialogDetails"" max-width=""1200"">
                <v-card>
                    <v-card-title class=""headline"">
                        <h4 v-if=""dataFacturas.currency != null""><i class=""fa fa-university logoColor""></i> &nbsp;");
            EndContext();
            BeginContext(5068, 34, false);
#line 109 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                                                                                                             Write(Localizer.Text("titleAmountTotal"));

#line default
#line hidden
            EndContext();
            BeginContext(5102, 202, true);
            WriteLiteral(": {{dataFacturas.currency.symbol}} {{formatoMonedaInput(dataFacturas.amount,lang,dataFacturas.currency.digits)}}</h4>\r\n                        <v-spacer></v-spacer>\r\n                        <v-btn icon ");
            EndContext();
            BeginContext(5305, 3755, true);
            WriteLiteral(@"@click=""dialogDetails = false"">
                            <i class=""fa fa-close""></i>
                        </v-btn>
                    </v-card-title>
                    <v-card-text>
                        <v-data-table :headers=""headerFacturas""
                                      :items=""dataFacturas.publications""
                                      :mobile-breakpoint=""widthTelefono""
                                      class=""elevation-1""
                                      item-key=""detalles"">
                            <template v-slot:header.invoice.number=""{item}"">
                                {{i18n.t(""headers.numeroFactura"")}}
                                <br />
                                <small>{{i18n.t(""headers.fechaVencimiento"")}}</small>
                            </template>

                            <template v-slot:item.n=""{ item }"">
                                {{dataFacturas.publications.indexOf(item) + 1}}
                            </tem");
            WriteLiteral(@"plate>

                            <template v-slot:item.invoice.number=""{item}"">
                                {{item.invoice.number}}
                                <br />
                                <small>
                                    {{backEndDateFormat(item.invoice.expiration_date)}}
                                </small>
                            </template>

                            <template v-slot:item.coin=""{item}"">
                                <v-chip small> <b>{{ dataFacturas.currency.iso_4217 }} </b></v-chip>
                            </template>

                            <template v-slot:item.valorneto=""{ item }"">
                                <div class=""text-right"">
                                    {{ dataFacturas.currency.symbol }} {{ formatoMonedaInput(item.invoice.amount,lang, dataFacturas.currency.digits) }}
                                </div>
                            </template>

                            <template v-slot:ite");
            WriteLiteral(@"m.discount=""{ item }"">
                                <v-chip color=""green"" x-small class=""text-white"" style=""max-width:4rem;justify-content:center"">
                                    <strong v-if=""item.discount != ''"">{{formatoMonedaInput(item.discount,lang,dataFacturas.currency.digits)}}&nbsp;%</strong>
                                    <strong v-else>0&nbsp;%</strong>
                                </v-chip>
                                <br />
                                <small>
                                    {{ dataFacturas.currency.symbol }} {{ formatoMonedaInput(item.earnings,lang, dataFacturas.currency.digits) }}
                                </small>

                            </template>

                            <template v-slot:item.payable=""{ item }"">
                                <div class=""text-right"">
                                    {{ dataFacturas.currency.symbol }} {{ formatoMonedaInput(item.payable,lang, dataFacturas.currency.digits) }}
        ");
            WriteLiteral(@"                        </div>
                            </template>

                            <template v-slot:item.commission=""{ item }"">
                                <div class=""text-right"">
                                    {{ dataFacturas.currency.symbol }} {{ formatoMonedaInput(item.commission,lang, dataFacturas.currency.digits) }}
                                </div>
                            </template>

                            <template v-slot:item.request_financing=""{item}"">
                                <v-tooltip top>
                                    <template v-slot:activator=""{ on }"">
                                        <i");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 9060, "\"", 9100, 1);
#line 176 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
WriteAttributeValue("", 9068, Localizer.Text("iconFinancing"), 9068, 32, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(9101, 244, true);
            WriteLiteral(" style=\"font-size:32px\" :style=\"{\'color\': item.invoice.request_financing ? \'green\':\'gray\'}\" v-on=\"on\" />\r\n                                    </template>\r\n                                    <span v-if=\"item.invoice.request_financing == false\">");
            EndContext();
            BeginContext(9346, 32, false);
#line 178 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                                                                                    Write(Localizer.Text("tipNoFinancing"));

#line default
#line hidden
            EndContext();
            BeginContext(9378, 58, true);
            WriteLiteral("</span>\r\n                                    <span v-else>");
            EndContext();
            BeginContext(9437, 30, false);
#line 179 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                                            Write(Localizer.Text("tipFinancing"));

#line default
#line hidden
            EndContext();
            BeginContext(9467, 444, true);
            WriteLiteral(@"</span>
                                </v-tooltip>
                            </template>

                        </v-data-table>
                    </v-card-text>
                </v-card>
            </v-dialog>

            <v-dialog v-model=""dialogTransfer"" max-width=""700"">
                <v-card>
                    <v-card-title class=""headline"">
                        <h4><i class=""fa fa-bank logoColor""></i> &nbsp;");
            EndContext();
            BeginContext(9912, 31, false);
#line 191 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                                                                  Write(Localizer.Text("titleTransfer"));

#line default
#line hidden
            EndContext();
            BeginContext(9943, 90, true);
            WriteLiteral("</h4>\r\n                        <v-spacer></v-spacer>\r\n                        <v-btn icon ");
            EndContext();
            BeginContext(10034, 385, true);
            WriteLiteral(@"@click=""dialogTransfer = false"">
                            <i class=""fa fa-close""></i>
                        </v-btn>
                    </v-card-title>
                    <v-card-text v-if=""selected.transfer != null"">
                        <div class=""row"">
                            <div class=""form-group col-sm-12 col-md-6"">
                                <label>");
            EndContext();
            BeginContext(10420, 39, false);
#line 200 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                                  Write(Localizer.Text("titleBankMadeTransfer"));

#line default
#line hidden
            EndContext();
            BeginContext(10459, 395, true);
            WriteLiteral(@"</label>
                                <div :class=""['input-group']"">
                                    <div class=""input-group-prepend"">
                                        <span class=""input-group-text""><i class=""fa fa-bank""></i></span>
                                    </div>
                                    <select v-model=""selected.transfer.entity"" class=""form-control"" ");
            EndContext();
            BeginContext(10855, 35, true);
            WriteLiteral("@change=\"refrescar()\" placeholder=\"");
            EndContext();
            BeginContext(10891, 33, false);
#line 205 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                                                                                                                                   Write(Localizer.Text("placeholderBank"));

#line default
#line hidden
            EndContext();
            BeginContext(10924, 44, true);
            WriteLiteral("\">\r\n                                        ");
            EndContext();
            BeginContext(10968, 81, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fc988a8f8b2bc6ee01de1bee13106065721d002523021", async() => {
                BeginContext(11017, 23, true);
                WriteLiteral("{{ banco.person.name }}");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(11049, 237, true);
            WriteLiteral("\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group col-sm-12 col-md-6\">\r\n                                <label>");
            EndContext();
            BeginContext(11287, 36, false);
#line 211 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                                  Write(Localizer.Text("titleAccountOrigin"));

#line default
#line hidden
            EndContext();
            BeginContext(11323, 613, true);
            WriteLiteral(@"</label>
                                <div :class=""['input-group']"">
                                    <div class=""input-group-prepend"">
                                        <span class=""input-group-text""><i class=""fa fa-balance-scale""></i></span>
                                    </div>
                                    <input v-on:blur=""validarAccountNumber()"" v-model=""selected.transfer.account_number"" onKeypress=""if ((event.keyCode < 48 || event.keyCode > 57)) event.returnValue = false;""
                                           type=""text"" :class=""['form-control',errorAccountNumber]""");
            EndContext();
            BeginWriteAttribute("placeholder", " placeholder=\"", 11936, "\"", 11993, 1);
#line 217 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
WriteAttributeValue("", 11950, Localizer.Text("placeholderAccountNumber"), 11950, 43, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginWriteAttribute("maxlength", "\r\n                                           maxlength=\"", 11994, "\"", 12073, 1);
#line 218 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
WriteAttributeValue("", 12050, Model.maxLengthAccount, 12050, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(12074, 287, true);
            WriteLiteral(@">
                                </div>
                                <span class=""text-danger"">{{ textoErrorAccountNumber }}</span>
                            </div>
                            <div class=""form-group col-sm-12 col-md-6"">
                                <label>");
            EndContext();
            BeginContext(12362, 37, false);
#line 223 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                                  Write(Localizer.Text("titleHolderTransfer"));

#line default
#line hidden
            EndContext();
            BeginContext(12399, 642, true);
            WriteLiteral(@"</label>
                                <div class=""input-group"">

                                    <div class=""input-group-prepend"">
                                        <span class=""input-group-text""><i class=""fa fa-group""></i></span>
                                    </div>
                                    <input type=""text"" class=""form-control"" disabled :value=""selected.receiver.name"">
                                </div>
                            </div>
                            <br /><hr />
                            <div class=""form-group col-sm-12 col-md-6"">
                                <label>");
            EndContext();
            BeginContext(13042, 36, false);
#line 234 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                                  Write(Localizer.Text("titleNumberAccount"));

#line default
#line hidden
            EndContext();
            BeginContext(13078, 671, true);
            WriteLiteral(@"</label>
                                <div class=""input-group"">

                                    <div class=""input-group-prepend"">
                                        <span class=""input-group-text""><i class=""fa fa-bank""></i></span>
                                    </div>
                                    <input type=""text"" class=""form-control"" disabled v-model=""selected.receiving_account.accountNumber"">
                                </div>
                            </div>

                            <!-- Monto a Pagar-->
                            <div class=""form-group col-sm-12 col-md-6"">
                                <label>");
            EndContext();
            BeginContext(13750, 34, false);
#line 246 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                                  Write(Localizer.Text("titleAmountToPay"));

#line default
#line hidden
            EndContext();
            BeginContext(13784, 484, true);
            WriteLiteral(@"</label>
                                <div class=""input-group"">
                                    <div class=""input-group-prepend"">
                                        <span class=""input-group-text"">{{selected.currency.symbol}}</span>
                                    </div>
                                    <input :class=""['form-control',errorAmount]""
                                           v-model=""selected.transfer.amount"" type=""text"" class=""form-control""");
            EndContext();
            BeginWriteAttribute("placeholder", " placeholder=\"", 14268, "\"", 14324, 1);
#line 252 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
WriteAttributeValue("", 14282, Localizer.Text("placeholderNumberFormat"), 14282, 42, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(14325, 45, true);
            WriteLiteral("\r\n                                           ");
            EndContext();
            BeginContext(14371, 768, true);
            WriteLiteral(@"@blur=""formatear()""
                                           onKeypress=""if ((event.keyCode < 48 || event.keyCode > 57) && (event.keyCode != fraccion(this.lang))) event.returnValue = false;""
                                           maxlength=""16"">
                                    <div class=""input-group-prepend"">
                                        <span class=""input-group-text"">{{selected.currency.iso_4217}}</span>
                                    </div>
                                </div>
                                <span class=""text-danger"">{{ textoErrorAmount }}</span>
                            </div>
                            <div :class=""['form-group', 'col-sm-12', 'col-md-6']"">
                                <label>");
            EndContext();
            BeginContext(15140, 33, false);
#line 263 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                                  Write(Localizer.Text("titleNReference"));

#line default
#line hidden
            EndContext();
            BeginContext(15173, 593, true);
            WriteLiteral(@"</label>
                                <div class=""input-group"">
                                    <div class=""input-group-prepend"">
                                        <span class=""input-group-text""><i class=""fa fa-balance-scale""></i></span>
                                    </div>
                                    <input v-on:blur=""validarReferencia()"" v-model=""selected.transfer.number"" onKeypress=""if ((event.keyCode < 48 || event.keyCode > 57)) event.returnValue = false;""
                                           type=""text"" :class=""['form-control',errorReference]""");
            EndContext();
            BeginWriteAttribute("placeholder", " placeholder=\"", 15766, "\"", 15825, 1);
#line 269 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
WriteAttributeValue("", 15780, Localizer.Text("placeholderNumberReference"), 15780, 45, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(15826, 554, true);
            WriteLiteral(@">
                                </div>
                                <span class=""text-danger"">{{ textoErrorReference }}</span>
                                <span class=""hidden"">{{ textoRefrescar }}</span>
                            </div>
                        </div>

                        <v-row>
                            <v-col cols=""12"" sm=""12"" lg=""12"" md=""12"">
                                <span class=""float-right"">
                                    <button class=""btn btn-danger"" v-on:click=""dialogTransfer = false"">");
            EndContext();
            BeginContext(16381, 29, false);
#line 279 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                                                                                                  Write(Localizer.Text("buttonClose"));

#line default
#line hidden
            EndContext();
            BeginContext(16410, 546, true);
            WriteLiteral(@"</button>

                                    <button class=""btn btn-success"" :disabled=""this.errorReference || this.errorAmount || this.selected.transfer == null || this.selected.transfer.entity == null || this.selected.transfer.amount == null || this.selected.transfer.number == null || this.selected.transfer.account_number == null || this.loading || this.errorAccountNumber || this.errorReference || this.errorAmount ""
                                            v-on:click=""dialogSeguro = true"">
                                        ");
            EndContext();
            BeginContext(16957, 32, false);
#line 283 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                                   Write(Localizer.Text("buttonTransfer"));

#line default
#line hidden
            EndContext();
            BeginContext(16989, 523, true);
            WriteLiteral(@"
                                    </button>
                                </span>
                            </v-col>
                        </v-row>
                    </v-card-text>

                </v-card>
            </v-dialog>
            <!--Mensaje de esta seguro que desea hacer esta acciòn-->
            <v-dialog v-model=""dialogSeguro"" max-width=""500"">
                <v-card>
                    <v-card-title class=""headline"">
                        <h4>
                            ");
            EndContext();
            BeginContext(17513, 33, false);
#line 297 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                       Write(Localizer.Text("titleConfirmPay"));

#line default
#line hidden
            EndContext();
            BeginContext(17546, 116, true);
            WriteLiteral("\r\n                        </h4>\r\n                        <v-spacer></v-spacer>\r\n                        <v-btn icon ");
            EndContext();
            BeginContext(17663, 572, true);
            WriteLiteral(@"@click=""dialogSeguro = false"">
                            <i class=""fa fa-close""></i>
                        </v-btn>
                    </v-card-title>

                    <v-card-text v-if=""selected.currency != null"">
                        <v-row>
                            <v-col cols=""12"" sm=""12"" lg=""12"" md=""12"" class=""notice"">
                                <li class=""list-group-item d-flex w-100 justify-content-between"" v-if=""selected.entity.person.id != selected.payer.id"">
                                    <span class=""text-xs text-muted""> ");
            EndContext();
            BeginContext(18236, 35, false);
#line 309 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                                                                 Write(Localizer.Text("textoPayerAccount"));

#line default
#line hidden
            EndContext();
            BeginContext(18271, 714, true);
            WriteLiteral(@"</span>
                                    <span class=""font-weight text-uppercase"" v-if=""selected.paying_account != null"">
                                        {{selected.paying_account.accountNumber}}
                                    </span>
                                    <span class=""font-weight text-uppercase"" v-else>
                                        {{selected.transfer.account_number}}
                                    </span>
                                </li>
                                <li class=""list-group-item d-flex w-100 justify-content-between"" v-if=""selected.receiving_account != null"">
                                    <span class=""text-xs text-muted""> ");
            EndContext();
            BeginContext(18986, 39, false);
#line 318 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                                                                 Write(Localizer.Text("textoReceivingAccount"));

#line default
#line hidden
            EndContext();
            BeginContext(19025, 442, true);
            WriteLiteral(@"</span>
                                    <span class=""font-weight text-uppercase"">
                                        {{selected.receiving_account.accountNumber}}
                                    </span>
                                </li>

                                <li class=""list-group-item d-flex w-100 justify-content-between"">
                                    <span class=""text-xs text-muted text-justify""> ");
            EndContext();
            BeginContext(19468, 37, false);
#line 325 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                                                                              Write(Localizer.Text("textoReceiptsNumber"));

#line default
#line hidden
            EndContext();
            BeginContext(19505, 411, true);
            WriteLiteral(@"</span>
                                    <span class=""font-weight text-uppercase text-right"">
                                        {{selected.id}}
                                    </span>
                                </li>

                                <li class=""list-group-item d-flex w-100 justify-content-between"">
                                    <span class=""text-xs text-muted""> ");
            EndContext();
            BeginContext(19917, 36, false);
#line 332 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                                                                 Write(Localizer.Text("textoTotalInvoices"));

#line default
#line hidden
            EndContext();
            BeginContext(19953, 444, true);
            WriteLiteral(@"</span>
                                    <span class=""font-weight text-uppercase"">
                                        {{formatoMonedaInput(selected.publications.length,lang,0)}}
                                    </span>
                                </li>

                                <li class=""list-group-item d-flex w-100 justify-content-between"">
                                    <span class=""text-xs text-muted""> ");
            EndContext();
            BeginContext(20398, 34, false);
#line 339 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                                                                 Write(Localizer.Text("headersAmountNet"));

#line default
#line hidden
            EndContext();
            BeginContext(20432, 570, true);
            WriteLiteral(@"</span>
                                    <span class=""font-weight text-uppercase"">
                                        {{ selected.currency.symbol }} {{ formatoMonedaInput(obtenerValorNet(selected.publications),lang, selected.currency.digits) }} <v-chip x-small>{{ selected.currency.iso_4217 }} </v-chip>
                                    </span>
                                </li>

                                <li class=""list-group-item d-flex w-100 justify-content-between"">
                                    <span class=""text-xs text-muted""> ");
            EndContext();
            BeginContext(21003, 38, false);
#line 346 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                                                                 Write(Localizer.Text("textoAmountDiscount2"));

#line default
#line hidden
            EndContext();
            BeginContext(21041, 576, true);
            WriteLiteral(@"</span>
                                    <span class=""font-weight text-uppercase"">
                                        {{ selected.currency.symbol }} {{ formatoMonedaInput(obtenerAmountDiscount(selected.publications),lang, selected.currency.digits) }} <v-chip x-small>{{ selected.currency.iso_4217 }} </v-chip>
                                    </span>
                                </li>

                                <li class=""list-group-item d-flex w-100 justify-content-between"">
                                    <span class=""text-xs text-muted""> ");
            EndContext();
            BeginContext(21618, 39, false);
#line 353 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                                                                 Write(Localizer.Text("textoAmountCommission"));

#line default
#line hidden
            EndContext();
            BeginContext(21657, 667, true);
            WriteLiteral(@"</span>
                                    <span class=""font-weight text-uppercase"">
                                        {{ selected.currency.symbol }} {{ formatoMonedaInput(obtenerAmountCommission(selected.publications),lang, selected.currency.digits) }} <v-chip x-small>{{ selected.currency.iso_4217 }} </v-chip>
                                    </span>
                                </li>

                                <li class=""list-group-item d-flex w-100 justify-content-between"" v-if=""selected.paying_account == null && selected.payer.id != selected.entity.person.id"">
                                    <span class=""text-xs text-muted""> ");
            EndContext();
            BeginContext(22325, 37, false);
#line 360 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                                                                 Write(Localizer.Text("textoAmountTransfer"));

#line default
#line hidden
            EndContext();
            BeginContext(22362, 576, true);
            WriteLiteral(@"</span>
                                    <span class=""font-weight text-uppercase"">
                                        {{ selected.currency.symbol }} {{ formatoMonedaInput(formatoMoneda(selected.transfer.amount,lang),lang, selected.currency.digits) }} <v-chip x-small>{{ selected.currency.iso_4217 }} </v-chip>
                                    </span>
                                </li>

                                <li class=""list-group-item d-flex w-100 justify-content-between"">
                                    <span class=""text-xs text-muted""> ");
            EndContext();
            BeginContext(22939, 34, false);
#line 367 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                                                                 Write(Localizer.Text("textoTotalAmount"));

#line default
#line hidden
            EndContext();
            BeginContext(22973, 681, true);
            WriteLiteral(@"</span>
                                    <span class=""font-weight text-uppercase"">
                                        {{ selected.currency.symbol }} {{ formatoMonedaInput(selected.amount,lang, selected.currency.digits) }} <v-chip x-small>{{ selected.currency.iso_4217 }} </v-chip>
                                    </span>
                                </li>
                            </v-col>
                        </v-row>

                        <v-row>
                            <v-col cols=""12"" sm=""12"" lg=""12"" md=""12"">
                                <span class=""float-right"">
                                    <button class=""btn btn-danger"" ");
            EndContext();
            BeginContext(23655, 30, true);
            WriteLiteral("@click=\"dialogSeguro = false\">");
            EndContext();
            BeginContext(23686, 29, false);
#line 378 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                                                                                             Write(Localizer.Text("buttonClose"));

#line default
#line hidden
            EndContext();
            BeginContext(23715, 137, true);
            WriteLiteral("</button>\r\n                                    <button class=\"btn btn-success\" v-on:click=\"realizarPago(selected); dialogSeguro = false\">");
            EndContext();
            BeginContext(23853, 29, false);
#line 379 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
                                                                                                                         Write(Localizer.Text("buttonAcept"));

#line default
#line hidden
            EndContext();
            BeginContext(23882, 250, true);
            WriteLiteral("</button>\r\n                                </span>\r\n                            </v-col>\r\n                        </v-row>\r\n                    </v-card-text>\r\n\r\n                </v-card>\r\n            </v-dialog>\r\n        </div>\r\n\r\n\r\n    </v-app>\r\n\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(24153, 12, true);
                WriteLiteral("\r\n\r\n        ");
                EndContext();
                BeginContext(24165, 77, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fc988a8f8b2bc6ee01de1bee13106065721d002547134", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
#line 394 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Confirmant\Pages\PagoFacturas.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(24242, 8, true);
                WriteLiteral("\r\n\r\n    ");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public Utilities.CultureLocalizer Localizer { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TuFactoring.Areas.Confirmant.Pages.PagoFacturasModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<TuFactoring.Areas.Confirmant.Pages.PagoFacturasModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<TuFactoring.Areas.Confirmant.Pages.PagoFacturasModel>)PageContext?.ViewData;
        public TuFactoring.Areas.Confirmant.Pages.PagoFacturasModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
