#pragma checksum "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(TuFactoring.Areas.Profile.Pages.Areas_Profile_Pages_ActualizarEmpresa), @"mvc.1.0.razor-page", @"/Areas/Profile/Pages/ActualizarEmpresa.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Areas/Profile/Pages/ActualizarEmpresa.cshtml", typeof(TuFactoring.Areas.Profile.Pages.Areas_Profile_Pages_ActualizarEmpresa), null)]
namespace TuFactoring.Areas.Profile.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 7 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
using System.Globalization;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a", @"/Areas/Profile/Pages/ActualizarEmpresa.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a0d876ac07db4560a63de31f86fcc7a6c15cfdef", @"/Areas/Profile/Pages/_ViewImports.cshtml")]
    public class Areas_Profile_Pages_ActualizarEmpresa : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-for", new global::Microsoft.AspNetCore.Html.HtmlString("pref in iden.prefixes"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(":value", new global::Microsoft.AspNetCore.Html.HtmlString("pref.id"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(":value", new global::Microsoft.AspNetCore.Html.HtmlString("registro.registrarse.document.prefix = null"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-if", new global::Microsoft.AspNetCore.Html.HtmlString("registro.registrarse.category == \'\' || registro.registrarse.category ==null"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(":value", new global::Microsoft.AspNetCore.Html.HtmlString("registro.registrarse.category"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("disabled", new global::Microsoft.AspNetCore.Html.HtmlString("disabled"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-for", new global::Microsoft.AspNetCore.Html.HtmlString("purp in dataPaises.categories"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(":value", new global::Microsoft.AspNetCore.Html.HtmlString("purp.id"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-for", new global::Microsoft.AspNetCore.Html.HtmlString("ocup in dataPaises.categories"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(":value", new global::Microsoft.AspNetCore.Html.HtmlString("ocup.id"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-if", new global::Microsoft.AspNetCore.Html.HtmlString("idCiudad== 0 || idCiudad==null "), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-for", new global::Microsoft.AspNetCore.Html.HtmlString("(estados,index) in dataPaises.regions"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(":value", new global::Microsoft.AspNetCore.Html.HtmlString("estados.id"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-if", new global::Microsoft.AspNetCore.Html.HtmlString("registro.registrarse.address.city == \'\' || registro.registrarse.address.city == null"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(":value", new global::Microsoft.AspNetCore.Html.HtmlString("registro.registrarse.address.city"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-for", new global::Microsoft.AspNetCore.Html.HtmlString("ciudadActual of listCities"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(":value", new global::Microsoft.AspNetCore.Html.HtmlString("ciudadActual.id"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-if", new global::Microsoft.AspNetCore.Html.HtmlString("pref.status == true"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_19 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(":value", new global::Microsoft.AspNetCore.Html.HtmlString("registro.representante.prefix = null"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_20 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(":value", new global::Microsoft.AspNetCore.Html.HtmlString("registro.administrador.prefix = null"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_21 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(":value", new global::Microsoft.AspNetCore.Html.HtmlString("registro.contacto.prefix = null"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_22 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-if", new global::Microsoft.AspNetCore.Html.HtmlString("registro.cuentaActual.entity == \'\' || registro.cuentaActual.entity ==null"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_23 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(":value", new global::Microsoft.AspNetCore.Html.HtmlString("registro.cuentaActual.entity"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_24 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-for", new global::Microsoft.AspNetCore.Html.HtmlString("banco in dataPaises.entities"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_25 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(":value", new global::Microsoft.AspNetCore.Html.HtmlString("banco.id"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_26 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-if", new global::Microsoft.AspNetCore.Html.HtmlString("registro.cuentaActual.currency == \'\' || registro.cuentaActual.currency ==null"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_27 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(":value", new global::Microsoft.AspNetCore.Html.HtmlString("registro.cuentaActual.currency"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_28 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-for", new global::Microsoft.AspNetCore.Html.HtmlString("curr in dataPaises.currencies"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_29 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(":value", new global::Microsoft.AspNetCore.Html.HtmlString("curr.id"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_30 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-if", new global::Microsoft.AspNetCore.Html.HtmlString("registro.cuentaActual.accountType == null || registro.cuentaActual.accountType == \'\'"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_31 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(":value", new global::Microsoft.AspNetCore.Html.HtmlString("registro.cuentaActual.accountType"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_32 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-if", new global::Microsoft.AspNetCore.Html.HtmlString("registro.user.discriminator == \'PERSON\'"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_33 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "SAVINGS", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_34 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "CHECKING", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_35 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/ContratoMarcoProveedores-convertido.pdf"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_36 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("download", new global::Microsoft.AspNetCore.Html.HtmlString("Contrato_Marco.pdf"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_37 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("btn btn-primary btn-icon-split"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_38 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Terminos _Condiciones.pdf"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_39 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("download", new global::Microsoft.AspNetCore.Html.HtmlString("Terminos_Condiciones.pdf"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_40 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Ctto  Banco-INVERSIONISTA modificado enero 2020-convertido.pdf"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_41 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("download", new global::Microsoft.AspNetCore.Html.HtmlString("Contrato_INVERSIONISTA.pdf"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_42 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", "~/js/VueRegistros/ActualizacionInformacion/VuexActualizarInfo.js", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_43 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", "~/js/VueRegistros/ActualizacionInformacion/vueActualizarRegistro.js", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(151, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 8 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
  
    ViewData["Title"] = "Perfil";

    switch (@Model.TipoParticipante)
    {
        case "CONFIRMANT":
            ViewData["Sidebar"] = "dark";
            break;
        case "DEBTOR":
            ViewData["Sidebar"] = "primary";
            break;
        case "FACTOR":
            ViewData["Sidebar"] = "warning";
            break;
        case "SUPPLIER":
            ViewData["Sidebar"] = "purple";
            break;
        default:
            ViewData["Sidebar"] = "navy";
            break;
    }

    Layout = "~/Pages/Shared/_Layout.cshtml";
    var culture = System.Globalization.CultureInfo.CurrentCulture.Name;

#line default
#line hidden
            BeginContext(907, 68, true);
            WriteLiteral("\r\n<v-app id=\"appRegistroEmpresas\">\r\n    <div class=\"mt-5\">\r\n        ");
            EndContext();
            BeginContext(976, 23, false);
#line 36 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
   Write(Html.AntiForgeryToken());

#line default
#line hidden
            EndContext();
            BeginContext(999, 41, true);
            WriteLiteral("\r\n        <input hidden id=\"contenidoRaw\"");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 1040, "\"", 1067, 1);
#line 37 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 1048, Model.registroJson, 1048, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1068, 646, true);
            WriteLiteral(@" />

        <div class=""modal fade in fa fa-spinner"" v-if=""cargando"" role=""dialog"">
            <div class=""modal-dialog text-center"">

                <h2 style=""color:#000""><span id=""cargando"">Cargando...</span></h2>
            </div>
        </div>

        <div id=""contenido"" hidden>
            <div class=""d-sm-flex align-items-center justify-content-between mb-4"">
                <h1 class=""h3 mb-0 text-gray-800"">
                    <a href=""#"" style=""color:#fff !important"" class=""btn btn-success btn-circle"">
                        <i class=""far fa-id-badge""></i>
                    </a>
                    &nbsp;");
            EndContext();
            BeginContext(1715, 29, false);
#line 52 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                     Write(Localizer.Text("titlePerfil"));

#line default
#line hidden
            EndContext();
            BeginContext(1744, 385, true);
            WriteLiteral(@"
                </h1>
                <span style=""display: none;"">
                    <a href=""#"" class=""d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm""><i class=""fas fa-download fa-sm text-white-50""></i> Generate Report</a>
                </span>
            </div>
            <p class=""mb-4"">
                <span v-if=""registro.user.participant == 'DEBTOR'"">");
            EndContext();
            BeginContext(2130, 34, false);
#line 59 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                              Write(Localizer.Text("textoAyudaPerfil"));

#line default
#line hidden
            EndContext();
            BeginContext(2164, 116, true);
            WriteLiteral("</span>\r\n                <span v-if=\"registro.user.participant == \'FACTOR\' && registro.user.discriminator==\'LEGAL\'\">");
            EndContext();
            BeginContext(2281, 47, false);
#line 60 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                      Write(Localizer.Text("textoAyudaPerfilInversionista"));

#line default
#line hidden
            EndContext();
            BeginContext(2328, 117, true);
            WriteLiteral("</span>\r\n                <span v-if=\"registro.user.participant == \'FACTOR\' && registro.user.discriminator==\'PERSON\'\">");
            EndContext();
            BeginContext(2446, 47, false);
#line 61 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                       Write(Localizer.Text("textoAyudaPerfilInversionista"));

#line default
#line hidden
            EndContext();
            BeginContext(2493, 78, true);
            WriteLiteral("</span>\r\n                <span v-if=\"registro.user.participant == \'SUPPLIER\'\">");
            EndContext();
            BeginContext(2572, 43, false);
#line 62 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                Write(Localizer.Text("textoAyudaPerfilProveedor"));

#line default
#line hidden
            EndContext();
            BeginContext(2615, 80, true);
            WriteLiteral("</span>\r\n                <span v-if=\"registro.user.participant == \'CONFIRMANT\'\">");
            EndContext();
            BeginContext(2696, 39, false);
#line 63 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                  Write(Localizer.Text("textoAyudaPerfilBanco"));

#line default
#line hidden
            EndContext();
            BeginContext(2735, 55, true);
            WriteLiteral("</span>\r\n                <br />\r\n                <br />");
            EndContext();
            BeginContext(2791, 28, false);
#line 65 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                 Write(Localizer.Text("textoPress"));

#line default
#line hidden
            EndContext();
            BeginContext(2819, 38, true);
            WriteLiteral("<a href=\"#\" class=\"font-weight-bold\"> ");
            EndContext();
            BeginContext(2858, 27, false);
#line 65 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                    Write(Localizer.Text("textoHere"));

#line default
#line hidden
            EndContext();
            BeginContext(2885, 5, true);
            WriteLiteral("</a> ");
            EndContext();
            BeginContext(2891, 38, false);
#line 65 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                                     Write(Localizer.Text("textoMoreInformation"));

#line default
#line hidden
            EndContext();
            BeginContext(2929, 760, true);
            WriteLiteral(@"
            </p>

            <div class=""row"">
                <div class=""col-sm-12"">
                    <div class="""">

                        <v-expand-transition>

                            <div class=""row"" v-show=""botonSiguiente == 0"">
                                <!---------------------------------------------- caja Datos Comerciales ---------------------------------------------------------->
                                <div class=""col-lg-6"">
                                    <div class=""card shadow mb-4"">
                                        <div class=""card-header py-3"">
                                            <h6 class=""m-0 font-weight-bold text-primary"">
                                                <i");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 3689, "\"", 3744, 2);
#line 80 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 3697, Localizer.Text("iconCommercialData"), 3697, 37, false);

#line default
#line hidden
            WriteAttributeValue(" ", 3734, "logoColor", 3735, 10, true);
            EndWriteAttribute();
            BeginContext(3745, 115, true);
            WriteLiteral("></i> &nbsp;\r\n                                                <span v-if=\"registro.user.discriminator == \'PERSON\'\">");
            EndContext();
            BeginContext(3861, 34, false);
#line 81 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                Write(Localizer.Text("titleDatosPerson"));

#line default
#line hidden
            EndContext();
            BeginContext(3895, 70, true);
            WriteLiteral("</span>\r\n                                                <span v-else>");
            EndContext();
            BeginContext(3966, 37, false);
#line 82 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                        Write(Localizer.Text("titleCommercialData"));

#line default
#line hidden
            EndContext();
            BeginContext(4003, 1080, true);
            WriteLiteral(@"</span>
                                            </h6>
                                        </div>
                                        <div class=""card-body"">
                                            <div class=""row"">
                                                <div class=""col-sm-12"" v-for=""iden in dataPaises.identifications"" v-if=""iden.default && iden.discriminator == registro.user.discriminator"">
                                                    <div class=""from-group"">
                                                        <label>{{iden.name}}</label>
                                                        <div class=""input-group"">
                                                            <div v-if=""iden.prefix"" class=""input-group-prepend"">

                                                                <select disabled class=""input-group-text"" v-on:change=""validarDocumentoPrincipal(iden.regexp, iden.mask_edit)"" v-model=""registro.registrarse.document.prefix"">
            ");
            WriteLiteral("                                                        ");
            EndContext();
            BeginContext(5083, 85, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a30578", async() => {
                BeginContext(5138, 21, true);
                WriteLiteral("{{pref.abbreviation}}");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5168, 492, true);
            WriteLiteral(@"
                                                                </select>
                                                            </div>
                                                            <div v-else class=""input-group-prepend"">
                                                                <select disabled v-on:change=""validarDocumentoPrincipal(iden.regexp, iden.mask_edit)"" class=""input-group-text"">
                                                                    ");
            EndContext();
            BeginContext(5660, 100, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a32434", async() => {
                BeginContext(5730, 21, true);
                WriteLiteral("{{iden.abbreviation}}");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5760, 948, true);
            WriteLiteral(@"
                                                                </select>
                                                            </div>
                                                            <input disabled onPaste=""return false"" :maxlength=""iden.digits"" v-on:blur=""validarDocumentoPrincipal(iden.regexp, iden.mask_edit)"" v-model=""registro.registrarse.document.number"" :class=""['form-control',errorDocumento]"" :placeholder=""iden.mask_edit"">
                                                        </div>
                                                        <span class=""text-danger"">{{errorTextoDocumentoPrincipal}}</span>
                                                    </div>

                                                </div>
                                                <div class=""from-group col-sm-12"">
                                                    <label v-if=""registro.user.discriminator=='LEGAL'"">");
            EndContext();
            BeginContext(6709, 34, false);
#line 109 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                  Write(Localizer.Text("textocompanyName"));

#line default
#line hidden
            EndContext();
            BeginContext(6743, 76, true);
            WriteLiteral("</label>\r\n                                                    <label v-else>");
            EndContext();
            BeginContext(6820, 34, false);
#line 110 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                             Write(Localizer.Text("textonameSurname"));

#line default
#line hidden
            EndContext();
            BeginContext(6854, 326, true);
            WriteLiteral(@"</label>

                                                    <input v-if=""registro.user.discriminator=='LEGAL'"" maxlength=""255"" disabled v-on:keyup=""validarNombreLegal()"" v-model=""registro.registrarse.company"" :class=""boleanoDesicionRegistro == false ? errorNombreLegal = 'is-valid' : errorNombreLegal"" class=""form-control""");
            EndContext();
            BeginWriteAttribute("placeholder", " placeholder=\"", 7180, "\"", 7235, 1);
#line 112 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 7194, Localizer.Text("placeholderNombreLegal"), 7194, 41, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(7236, 283, true);
            WriteLiteral(@">
                                                    <input v-else maxlength=""255"" disabled v-on:blur=""validarNombresPerson()"" v-model=""registro.registrarse.firstName"" :class=""boleanoDesicionRegistro == false ? errorNombreLegal = 'is-valid' : errorNombreLegal"" class=""form-control""");
            EndContext();
            BeginWriteAttribute("placeholder", " placeholder=\"", 7519, "\"", 7568, 1);
#line 113 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 7533, Localizer.Text("textonameSurname"), 7533, 35, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(7569, 441, true);
            WriteLiteral(@">
                                                    <span class=""text-danger"">{{boleanoDesicionRegistro == false ? errorTextoNombreLegal = '' : errorTextoNombreLegal }}</span>
                                                </div>

                                                <div v-if=""registro.user.discriminator=='LEGAL'"" class=""from-group col-sm-12"">
                                                    <label for=""proposito"">");
            EndContext();
            BeginContext(8011, 40, false);
#line 118 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                      Write(Localizer.Text("textocomercialActivity"));

#line default
#line hidden
            EndContext();
            BeginContext(8051, 278, true);
            WriteLiteral(@"</label>

                                                    <select disabled v-on:blur=""validarPurpuse()"" v-on:change=""validarPurpuse()"" v-model=""registro.registrarse.category"" :class=""['form-control',errorPurpose]"">
                                                        ");
            EndContext();
            BeginContext(8329, 197, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a38670", async() => {
                BeginContext(8480, 37, false);
#line 121 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                                                                                                                         Write(Localizer.Text("placeholderActivity"));

#line default
#line hidden
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(8526, 58, true);
            WriteLiteral("\r\n                                                        ");
            EndContext();
            BeginContext(8584, 85, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a40506", async() => {
                BeginContext(8647, 13, true);
                WriteLiteral("{{purp.name}}");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(8669, 399, true);
            WriteLiteral(@"
                                                    </select>
                                                    <span class=""text-danger"">{{ errorTextoPurpose }}</span>
                                                </div>

                                                <div v-else class=""from-group col-sm-12"">
                                                    <label for=""proposito"">");
            EndContext();
            BeginContext(9069, 33, false);
#line 128 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                      Write(Localizer.Text("textooccupation"));

#line default
#line hidden
            EndContext();
            BeginContext(9102, 283, true);
            WriteLiteral(@"</label>
                                                    <select disabled v-on:change=""validarOcupacion()"" v-on:blur=""validarOcupacion()"" v-model=""registro.registrarse.category"" :class=""['form-control',errorOccupation]"">
                                                        ");
            EndContext();
            BeginContext(9385, 187, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a42984", async() => {
                BeginContext(9525, 38, false);
#line 130 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                                                                                                              Write(Localizer.Text("placeholderOcupation"));

#line default
#line hidden
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("disabled", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9572, 58, true);
            WriteLiteral("\r\n                                                        ");
            EndContext();
            BeginContext(9630, 85, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a45038", async() => {
                BeginContext(9693, 13, true);
                WriteLiteral("{{ocup.name}}");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9715, 478, true);
            WriteLiteral(@"
                                                    </select>
                                                    <span class=""text-danger"">{{ errorOccupationTexto }}</span>
                                                </div>

                                                <div v-if=""registro.user.discriminator != 'LEGAL' && registro.user.participant == 'FACTOR'"" class=""from-group col-sm-12"">
                                                    <label for=""email"">");
            EndContext();
            BeginContext(10194, 28, false);
#line 137 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                  Write(Localizer.Text("textoEmail"));

#line default
#line hidden
            EndContext();
            BeginContext(10222, 607, true);
            WriteLiteral(@"</label>
                                                    <div class=""input-group"">
                                                        <div class=""input-group-prepend"">
                                                            <span class=""input-group-text""><i class=""fa fa-envelope""></i></span>
                                                        </div>
                                                        <input disabled onPaste=""return false"" maxlength=""60"" v-on:keyup=""validarEmailNatural()"" v-model=""registro.registrarse.email.address"" :class=""['form-control',errorEmailNatural]""");
            EndContext();
            BeginWriteAttribute("placeholder", " placeholder=\"", 10829, "\"", 10878, 1);
#line 142 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 10843, Localizer.Text("placeholderEmail"), 10843, 35, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(10879, 863, true);
            WriteLiteral(@">
                                                    </div>
                                                    <span class=""text-danger"">{{errorEmailNaturalTexto}}</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <!----------------------------------------------Panel Direcciones ---------------------------------------------------------->
                                <div class=""col-lg-6"">
                                    <div class=""card shadow mb-4"">
                                        <div class=""card-header py-3"">
                                            <h6 class=""m-0 font-weight-bold text-primary""><i");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 11742, "\"", 11795, 2);
#line 154 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 11750, Localizer.Text("iconTitleAddress"), 11750, 35, false);

#line default
#line hidden
            WriteAttributeValue(" ", 11785, "logoColor", 11786, 10, true);
            EndWriteAttribute();
            BeginContext(11796, 12, true);
            WriteLiteral("></i> &nbsp;");
            EndContext();
            BeginContext(11809, 30, false);
#line 154 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                                                                         Write(Localizer.Text("titleAddress"));

#line default
#line hidden
            EndContext();
            BeginContext(11839, 333, true);
            WriteLiteral(@"</h6>
                                        </div>
                                        <div class=""card-body"">
                                            <div class=""row"">
                                                <div class=""from-group col-sm-12"">
                                                    <label for="""">");
            EndContext();
            BeginContext(12173, 36, false);
#line 159 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                             Write(Localizer.Text("textofiscalAddress"));

#line default
#line hidden
            EndContext();
            BeginContext(12209, 273, true);
            WriteLiteral(@"</label>
                                                    <div class=""input-group"">
                                                        <div class=""input-group-prepend"">
                                                            <span class=""input-group-text""><i");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 12482, "\"", 12525, 1);
#line 162 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 12490, Localizer.Text("iconTitleAddress"), 12490, 35, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(12526, 272, true);
            WriteLiteral(@"></i></span>
                                                        </div>
                                                        <input maxlength=""255"" v-on:keyup=""validarDireccion"" v-model=""registro.registrarse.address.line1"" :class=""['form-control',errorDireccion]""");
            EndContext();
            BeginWriteAttribute("placeholder", " placeholder=\"", 12798, "\"", 12858, 1);
#line 164 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 12812, Localizer.Text("placeholderEnterYourAddress"), 12812, 46, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(12859, 686, true);
            WriteLiteral(@">
                                                    </div>
                                                    <span class=""text-danger"">{{errorTextoDireccion}}</span>
                                                    <div role=""separator"" class=""divider""></div>
                                                </div>
                                                <div class=""from-group col-sm-12"">
                                                    <div class=""input-group"">
                                                        <input maxlength=""255"" :class=""['form-control',errorDireccion2]"" v-on:keyup=""validarDireccion2"" v-model=""registro.registrarse.address.line2""");
            EndContext();
            BeginWriteAttribute("placeholder", " placeholder=\"", 13545, "\"", 13606, 1);
#line 171 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 13559, Localizer.Text("placeholderEnterYourAddress2"), 13559, 47, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(13607, 471, true);
            WriteLiteral(@">
                                                    </div>
                                                    <span class=""text-danger"">{{errorDireccion2Texto}}</span>
                                                    <div role=""separator"" class=""divider""></div>
                                                </div>
                                                <div class=""from-group col-sm-12"">
                                                    <label>");
            EndContext();
            BeginContext(14079, 28, false);
#line 177 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                      Write(Localizer.Text("textostate"));

#line default
#line hidden
            EndContext();
            BeginContext(14107, 273, true);
            WriteLiteral(@"</label>
                                                    <div class=""input-group"">
                                                        <div class=""input-group-prepend"">
                                                            <span class=""input-group-text""><i");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 14380, "\"", 14418, 1);
#line 180 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 14388, Localizer.Text("iconAddress"), 14388, 30, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(14419, 315, true);
            WriteLiteral(@"></i></span>
                                                        </div>
                                                        <select v-on:blur=""restablecerCiudad()"" v-on:change=""restablecerCiudad()"" v-model=""idCiudad"" :class=""['form-control']"">
                                                            ");
            EndContext();
            BeginContext(14734, 111, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a55672", async() => {
                BeginContext(14801, 35, false);
#line 183 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                                         Write(Localizer.Text("placeholderEstate"));

#line default
#line hidden
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("disabled", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_11.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(14845, 62, true);
            WriteLiteral("\r\n                                                            ");
            EndContext();
            BeginContext(14907, 99, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a57782", async() => {
                BeginContext(14981, 16, true);
                WriteLiteral("{{estados.name}}");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(15006, 543, true);
            WriteLiteral(@"
                                                        </select>

                                                    </div>
                                                    <span class=""text-danger"">{{errorEstadoTexto}}</span>
                                                </div>
                                                <div v-if=""cambiarCiudad != 0"" :class=""['from-group col-sm-12',errorCiudad]"">
                                                    <div>
                                                        <label>");
            EndContext();
            BeginContext(15550, 27, false);
#line 192 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                          Write(Localizer.Text("textocity"));

#line default
#line hidden
            EndContext();
            BeginContext(15577, 285, true);
            WriteLiteral(@"</label>
                                                        <div class=""input-group"">
                                                            <div class=""input-group-prepend"">
                                                                <span class=""input-group-text""><i");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 15862, "\"", 15897, 1);
#line 195 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 15870, Localizer.Text("iconCity"), 15870, 27, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(15898, 356, true);
            WriteLiteral(@"></i></span>
                                                            </div>
                                                            <select :class=""['form-control',errorCiudad]"" v-on:blur=""validarCiudad()"" v-on:change=""validarCiudad()"" v-model=""registro.registrarse.address.city"">
                                                                ");
            EndContext();
            BeginContext(16254, 195, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a61201", async() => {
                BeginContext(16407, 33, false);
#line 198 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                                                                                                                                   Write(Localizer.Text("placeholderCity"));

#line default
#line hidden
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("disabled", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(16449, 66, true);
            WriteLiteral("\r\n                                                                ");
            EndContext();
            BeginContext(16515, 98, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a63284", async() => {
                BeginContext(16583, 21, true);
                WriteLiteral("{{ciudadActual.name}}");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(16613, 523, true);
            WriteLiteral(@"
                                                            </select>
                                                        </div>
                                                        <span class=""text-danger"">{{errorCiudadTexto}}</span>
                                                    </div>
                                                </div>
                                                <div class=""from-group col-sm-12"">
                                                    <label for=""telefonoL"">");
            EndContext();
            BeginContext(17137, 28, false);
#line 206 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                      Write(Localizer.Text("textophone"));

#line default
#line hidden
            EndContext();
            BeginContext(17165, 273, true);
            WriteLiteral(@"</label>
                                                    <div class=""input-group"">
                                                        <div class=""input-group-prepend"">
                                                            <span class=""input-group-text""><i");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 17438, "\"", 17474, 1);
#line 209 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 17446, Localizer.Text("iconPhone"), 17446, 28, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(17475, 1952, true);
            WriteLiteral(@"></i></span>
                                                        </div>
                                                        <div class=""input-group-prepend"">
                                                            <span class=""input-group-text"">+{{dataPaises.calling_code}}</span>
                                                        </div>
                                                        <input :maxlength=""maxlegthTelefono"" onPaste=""return false"" :class=""['form-control', errorTelefonoDirecciones]"" v-on:keyup=""validarTelefonoDirecciones()"" type=""text"" v-model=""registro.registrarse.phone.number"" :placeholder=""placeholderTelefono"">
                                                    </div>
                                                    <span class=""text-danger"">{{errorTextoTelefonoDirecciones}}</span>
                                                </div>
                                            </div>
                                        </div>
                        ");
            WriteLiteral(@"            </div>
                                </div>

                            </div>

                        </v-expand-transition>

                        <v-expand-transition>
                            <div class=""row"" v-show=""botonSiguiente == 1"">

                                <!---------------------------------------------- caja Representante Legal ---------------------------------------------------------->
                                <div v-if=""registro.user.discriminator == 'LEGAL'"" class=""col-lg-6"">
                                    <div>
                                        <div v-if=""registro.representante != null"">
                                            <div class=""card shadow mb-4"">
                                                <div class=""card-header py-3"">
                                                    <h6 class=""m-0 font-weight-bold text-primary""><i");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 19427, "\"", 19478, 2);
#line 236 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 19435, Localizer.Text("iconLegalRepre"), 19435, 33, false);

#line default
#line hidden
            WriteAttributeValue(" ", 19468, "logoColor", 19469, 10, true);
            EndWriteAttribute();
            BeginContext(19479, 12, true);
            WriteLiteral("></i> &nbsp;");
            EndContext();
            BeginContext(19492, 42, false);
#line 236 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                                                                               Write(Localizer.Text("titleLegalRepresentative"));

#line default
#line hidden
            EndContext();
            BeginContext(19534, 1272, true);
            WriteLiteral(@"</h6>
                                                </div>
                                                <div class=""card-body"">
                                                    <div class=""row"">
                                                        <div class=""col-sm-12"" v-for=""iden in dataPaises.identifications"" v-if=""iden.default && iden.discriminator == 'PERSON'"">

                                                            <div class=""from-group"">
                                                                <span v-if=""iden.id !== 999 ? registro.representante.identification = iden.id : iden.id = 9999 ""></span>

                                                                <label for=""doc"">{{iden.name}}</label>
                                                                <div class=""input-group"">
                                                                    <div v-if=""iden.prefix"" class=""input-group-prepend"">
                                                              ");
            WriteLiteral("          <select disabled v-on:change=\"validarDocumentoRepresentanteLegal(iden.regexp, iden.mask_edit)\" v-model=\"registro.representante.prefix\" class=\"input-group-text\">\r\n                                                                            ");
            EndContext();
            BeginContext(20806, 112, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a70746", async() => {
                BeginContext(20888, 21, true);
                WriteLiteral("{{pref.abbreviation}}");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(20918, 541, true);
            WriteLiteral(@"
                                                                        </select>
                                                                    </div>
                                                                    <div v-else class=""input-group-prepend"">
                                                                        <select disabled v-on:change=""validarDocumentoRepresentanteLegal(iden.regexp, iden.mask_edit)"" class=""input-group-text"">
                                                                            ");
            EndContext();
            BeginContext(21459, 93, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a72737", async() => {
                BeginContext(21522, 21, true);
                WriteLiteral("{{iden.abbreviation}}");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_19);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(21552, 994, true);
            WriteLiteral(@"
                                                                        </select>
                                                                    </div>
                                                                    <input disabled onPaste=""return false"" :maxlength=""iden.digits"" v-on:keyup=""validarDocumentoRepresentanteLegal(iden.regexp, iden.mask_edit)"" v-model=""registro.representante.documentNumber"" :class=""['form-control']"" :placeholder=""iden.mask_edit"">
                                                                </div>
                                                                <span class=""text-danger"">{{errorTextoDocumentoRepresentanteLegal}}</span>
                                                            </div>

                                                        </div>
                                                        <div class=""from-group col-sm-12"">
                                                            <label for=""nombre"">");
            EndContext();
            BeginContext(22547, 34, false);
#line 264 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                           Write(Localizer.Text("textonameSurname"));

#line default
#line hidden
            EndContext();
            BeginContext(22581, 297, true);
            WriteLiteral(@"</label>
                                                            <div class=""input-group"">
                                                                <div class=""input-group-prepend"">
                                                                    <span class=""input-group-text""><i");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 22878, "\"", 22913, 1);
#line 267 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 22886, Localizer.Text("iconUser"), 22886, 27, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(22914, 293, true);
            WriteLiteral(@"></i></span>
                                                                </div>
                                                                <input disabled maxlength=""255"" v-on:keyup=""validarNombresRepresentanteLegal()"" v-model=""registro.representante.name"" :class=""['form-control']""");
            EndContext();
            BeginWriteAttribute("placeholder", " placeholder=\"", 23207, "\"", 23255, 1);
#line 269 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 23221, Localizer.Text("placeholderName"), 23221, 34, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(23256, 619, true);
            WriteLiteral(@">
                                                            </div>
                                                            <span class=""text-danger"">{{errorTextoNombresRepresentanteLegal}} {{errorTextoApellidosRepresentanteLegal}}</span>
                                                        </div>

                                                    </div>
                                                    <div class=""row"">
                                                        <div class=""from-group col-sm-12"">
                                                            <label for=""telefonoL"">");
            EndContext();
            BeginContext(23876, 28, false);
#line 277 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                              Write(Localizer.Text("textophone"));

#line default
#line hidden
            EndContext();
            BeginContext(23904, 297, true);
            WriteLiteral(@"</label>
                                                            <div class=""input-group"">
                                                                <div class=""input-group-prepend"">
                                                                    <span class=""input-group-text""><i");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 24201, "\"", 24237, 1);
#line 280 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 24209, Localizer.Text("iconPhone"), 24209, 28, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(24238, 1148, true);
            WriteLiteral(@"></i></span>
                                                                </div>
                                                                <div class=""input-group-prepend"">
                                                                    <span class=""input-group-text"">+{{dataPaises.calling_code}}</span>
                                                                </div>
                                                                <input onPaste=""return false"" :maxlength=""maxlegthTelefono"" v-on:keyup=""validarTelefonoRepresentanteLegal()"" type=""text"" v-model=""registro.representante.phoneNumber"" :class=""['form-control',errorTelefonoRepresentante]"" :placeholder=""placeholderTelefono"">

                                                            </div>
                                                            <span class=""text-danger"">{{errorTextoTelefonoRepresentante}}</span>
                                                        </div>
                                               ");
            WriteLiteral("         <div class=\"from-group col-sm-12\">\r\n                                                            <label for=\"email\">");
            EndContext();
            BeginContext(25387, 28, false);
#line 291 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                          Write(Localizer.Text("textoEmail"));

#line default
#line hidden
            EndContext();
            BeginContext(25415, 297, true);
            WriteLiteral(@"</label>
                                                            <div class=""input-group"">
                                                                <div class=""input-group-prepend"">
                                                                    <span class=""input-group-text""><i");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 25712, "\"", 25748, 1);
#line 294 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 25720, Localizer.Text("iconEmail"), 25720, 28, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(25749, 314, true);
            WriteLiteral(@"></i></span>
                                                                </div>
                                                                <input disabled onPaste=""return false"" maxlength=""60"" v-on:keyup=""validarEmailRepresentanteLegal()"" v-model=""registro.representante.email"" :class=""['form-control']""");
            EndContext();
            BeginWriteAttribute("placeholder", " placeholder=\"", 26063, "\"", 26112, 1);
#line 296 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 26077, Localizer.Text("placeholderEmail"), 26077, 35, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(26113, 1062, true);
            WriteLiteral(@">

                                                            </div>
                                                            <span class=""text-danger"">{{errorTextoEmailRepresentante}}</span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!----------------------------------------------- caja Administrado ----------------------------------------------------- -->
                                <div v-if=""registro.user.participant == 'CONFIRMANT'"" class=""col-lg-6"">
                                    <div class=""card shadow mb-4"">
                                        <div class=""card-header py-3"">
                                            <h6 class=");
            WriteLiteral("\"m-0 font-weight-bold text-primary\"><i");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 27175, "\"", 27221, 2);
#line 312 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 27183, Localizer.Text("iconAdmin"), 27183, 28, false);

#line default
#line hidden
            WriteAttributeValue(" ", 27211, "logoColor", 27212, 10, true);
            EndWriteAttribute();
            BeginContext(27222, 12, true);
            WriteLiteral("></i> &nbsp;");
            EndContext();
            BeginContext(27235, 36, false);
#line 312 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                                                                  Write(Localizer.Text("titleAdministrator"));

#line default
#line hidden
            EndContext();
            BeginContext(27271, 1066, true);
            WriteLiteral(@"</h6>
                                        </div>
                                        <div class=""card-body"">
                                            <div class=""row"">
                                                <div class=""col-sm-12"" v-for=""iden in dataPaises.identifications"" v-if=""iden.default && iden.discriminator == 'PERSON'"">
                                                    <span v-if=""iden.id !== 999 ? registro.administrador.identification = iden.id : iden.id = 9999 ""></span>

                                                    <label for=""doc"">{{iden.name}}</label>
                                                    <div class=""input-group"">
                                                        <div v-if=""iden.prefix"" class=""input-group-prepend"">
                                                            <select v-on:change=""validarDocumentoAdministrador(iden.regexp, iden.mask_edit)"" v-model=""registro.administrador.prefix"" class=""input-group-text"">
                      ");
            WriteLiteral("                                          ");
            EndContext();
            BeginContext(28337, 112, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a85533", async() => {
                BeginContext(28419, 21, true);
                WriteLiteral("{{pref.abbreviation}}");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(28449, 476, true);
            WriteLiteral(@"
                                                            </select>
                                                        </div>
                                                        <div class=""input-group-prepend"" v-else>
                                                            <select disabled v-on:change=""validarDocumentoAdministrador(iden.regexp, iden.mask_edit)"" class=""input-group-text"">
                                                                ");
            EndContext();
            BeginContext(28925, 93, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a87459", async() => {
                BeginContext(28988, 21, true);
                WriteLiteral("{{iden.abbreviation}}");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(29018, 868, true);
            WriteLiteral(@"
                                                            </select>
                                                        </div>
                                                        <input onPaste=""return false"" :maxlength=""iden.digits"" v-on:keyup=""validarDocumentoAdministrador(iden.regexp, iden.mask_edit)"" v-model=""registro.administrador.documentNumber"" :class=""['form-control', errorDocumentoAdministrador]"" :placeholder=""iden.mask_edit"">
                                                    </div>
                                                    <span class=""text-danger"">{{errorDocumentoAdministradorTexto}}</span>
                                                </div>
                                                <div class=""from-group col-sm-12"">
                                                    <label for=""txtNombreContactoCliente"">");
            EndContext();
            BeginContext(29887, 34, false);
#line 336 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                     Write(Localizer.Text("textonameSurname"));

#line default
#line hidden
            EndContext();
            BeginContext(29921, 275, true);
            WriteLiteral(@"</label>
                                                    <div class=""input-group"">

                                                        <div class=""input-group-prepend"">
                                                            <span class=""input-group-text""><i");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 30196, "\"", 30231, 1);
#line 340 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 30204, Localizer.Text("iconUser"), 30204, 27, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(30232, 289, true);
            WriteLiteral(@"></i></span>
                                                        </div>
                                                        <input maxlength=""255"" v-on:keyup=""validarNombresAdministrador()"" v-model=""registro.administrador.name"" :class=""['form-control', errorNombreAdministrador]""");
            EndContext();
            BeginWriteAttribute("placeholder", " placeholder=\"", 30521, "\"", 30569, 1);
#line 342 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 30535, Localizer.Text("placeholderName"), 30535, 34, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(30570, 561, true);
            WriteLiteral(@">
                                                    </div>
                                                    <span class=""text-danger"">{{errorNombreAdministradorTexto}} {{errorApellidoAdministradorTexto}}</span>
                                                </div>
                                            </div>
                                            <div class=""row"">
                                                <div class=""from-group col-sm-12"">
                                                    <label for=""txtTlfContactoCliente"">");
            EndContext();
            BeginContext(31132, 28, false);
#line 349 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                  Write(Localizer.Text("textophone"));

#line default
#line hidden
            EndContext();
            BeginContext(31160, 273, true);
            WriteLiteral(@"</label>
                                                    <div class=""input-group"">
                                                        <div class=""input-group-prepend"">
                                                            <span class=""input-group-text""><i");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 31433, "\"", 31469, 1);
#line 352 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 31441, Localizer.Text("iconPhone"), 31441, 28, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(31470, 1210, true);
            WriteLiteral(@"></i></span>
                                                        </div>
                                                        <div class=""input-group-prepend"">
                                                            <span class=""input-group-text"">+{{dataPaises.calling_code}}</span>
                                                            <input type=""hidden"" v-model=""registro.administrador.phoneNumber"" />
                                                        </div>
                                                        <input onPaste=""return false"" :maxlength=""maxlegthTelefono"" v-model=""registro.administrador.phoneNumber"" v-on:keyup=""validarTelefonoAdministrador()"" type=""text"" :class=""['form-control', errorTelefonoAdministrador]"" :placeholder=""placeholderTelefono"">
                                                    </div>
                                                    <span class=""text-danger"">{{errorTelefonoAdministradorTexto}}</span>
                                           ");
            WriteLiteral("     </div>\r\n                                                <div class=\"from-group col-sm-12\">\r\n                                                    <label for=\"txtEmailContactoCliente\">");
            EndContext();
            BeginContext(32681, 28, false);
#line 363 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                    Write(Localizer.Text("textoEmail"));

#line default
#line hidden
            EndContext();
            BeginContext(32709, 277, true);
            WriteLiteral(@"</label>

                                                    <div class=""input-group"">

                                                        <div class=""input-group-prepend"">
                                                            <span class=""input-group-text""><i");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 32986, "\"", 33022, 1);
#line 368 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 32994, Localizer.Text("iconEmail"), 32994, 28, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(33023, 309, true);
            WriteLiteral(@"></i></span>
                                                        </div>
                                                        <input onPaste=""return false"" maxlength=""60"" v-on:keyup=""validarEmailAdministrador()"" v-model=""registro.administrador.email"" :class=""['form-control', errorEmailAdministrador]""");
            EndContext();
            BeginWriteAttribute("placeholder", " placeholder=\"", 33332, "\"", 33381, 1);
#line 370 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 33346, Localizer.Text("placeholderEmail"), 33346, 35, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(33382, 969, true);
            WriteLiteral(@">
                                                    </div>
                                                    <span class=""text-danger"">{{errorEmailAdministradorTexto}}</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!---------------------------------------------- caja Persona de Contacto ---------------------------------------------------------->
                                <div v-if=""registro.user.participant != 'CONFIRMANT' && registro.user.participant != 'FACTOR'"" class=""col-lg-6"">
                                    <div class=""card shadow mb-4"">
                                        <div class=""card-header py-3"">
                                            <h6 class=""m-0 font-weight-bold text-primary""><i");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 34351, "\"", 34405, 2);
#line 383 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 34359, Localizer.Text("iconContactPerson"), 34359, 36, false);

#line default
#line hidden
            WriteAttributeValue(" ", 34395, "logoColor", 34396, 10, true);
            EndWriteAttribute();
            BeginContext(34406, 12, true);
            WriteLiteral("></i> &nbsp;");
            EndContext();
            BeginContext(34419, 36, false);
#line 383 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                                                                          Write(Localizer.Text("textoContactPerson"));

#line default
#line hidden
            EndContext();
            BeginContext(34455, 1165, true);
            WriteLiteral(@"</h6>
                                        </div>
                                        <div class=""card-body"">
                                            <div class=""row"">
                                                <div class=""col-sm-12"" v-for=""iden in dataPaises.identifications"" v-if=""iden.default && iden.discriminator == 'PERSON'"">

                                                    <span v-if=""iden.id !== 999 ? registro.contacto.identification = iden.id : iden.id = 1 ""></span>

                                                    <div class=""from-group"">
                                                        <label for=""doc"">{{iden.name}}</label>
                                                        <div class=""input-group"">
                                                            <div v-if=""iden.prefix"" class=""input-group-prepend"">
                                                                <select v-on:change=""validarDocumentoAsociadoContactoPrincipal(iden.regexp, iden.m");
            WriteLiteral("ask_edit)\" v-model=\"registro.contacto.prefix\" class=\"input-group-text\">\r\n                                                                    ");
            EndContext();
            BeginContext(35620, 112, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a100082", async() => {
                BeginContext(35702, 21, true);
                WriteLiteral("{{pref.abbreviation}}");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(35732, 508, true);
            WriteLiteral(@"
                                                                </select>
                                                            </div>
                                                            <div v-else class=""input-group-prepend"">
                                                                <select disabled v-on:change=""validarDocumentoAsociadoContactoPrincipal(iden.regexp, iden.mask_edit)"" class=""input-group-text"">
                                                                    ");
            EndContext();
            BeginContext(36240, 88, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a102041", async() => {
                BeginContext(36298, 21, true);
                WriteLiteral("{{iden.abbreviation}}");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_21);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(36328, 963, true);
            WriteLiteral(@"
                                                                </select>
                                                            </div>
                                                            <input onPaste=""return false"" :maxlength=""iden.digits"" v-on:keyup=""validarDocumentoAsociadoContactoPrincipal(iden.regexp, iden.mask_edit)"" v-model=""registro.contacto.documentNumber"" :class=""['form-control',errorDocumentoAsociadoContactoPrincipal]"" :placeholder=""iden.mask_edit"">

                                                        </div>
                                                        <span class=""text-danger"">{{errorDocumentoAsociadoContactoTextoPrincipal}}</span>
                                                    </div>

                                                </div>
                                                <div class=""from-group col-sm-12"">
                                                    <label for=""legal"">");
            EndContext();
            BeginContext(37292, 34, false);
#line 412 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                  Write(Localizer.Text("textonameSurname"));

#line default
#line hidden
            EndContext();
            BeginContext(37326, 273, true);
            WriteLiteral(@"</label>
                                                    <div class=""input-group"">
                                                        <div class=""input-group-prepend"">
                                                            <span class=""input-group-text""><i");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 37599, "\"", 37634, 1);
#line 415 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 37607, Localizer.Text("iconUser"), 37607, 27, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(37635, 375, true);
            WriteLiteral(@"></i></span>
                                                        </div>
                                                        <input maxlength=""255"" :disabled=""errorDocumentoAsociadoContactoPrincipal =='is-valid'?false:true"" v-on:keyup=""validarNombresAsociadoContactoPrincipal()"" v-model=""registro.contacto.name"" :class=""['form-control',errorNombreContactoPrincipal]""");
            EndContext();
            BeginWriteAttribute("placeholder", " placeholder=\"", 38010, "\"", 38058, 1);
#line 417 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 38024, Localizer.Text("placeholderName"), 38024, 34, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(38059, 557, true);
            WriteLiteral(@">
                                                    </div>
                                                    <span class=""text-danger"">{{errorNombreContactoTextoPrincipal}} {{errorApellidoContactoTextoPrincipal}}</span>
                                                </div>
                                            </div>
                                            <div class=""row"">
                                                <div class=""from-group col-sm-12"">
                                                    <label for=""telefonoL"">");
            EndContext();
            BeginContext(38617, 28, false);
#line 424 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                      Write(Localizer.Text("textophone"));

#line default
#line hidden
            EndContext();
            BeginContext(38645, 273, true);
            WriteLiteral(@"</label>
                                                    <div class=""input-group"">
                                                        <div class=""input-group-prepend"">
                                                            <span class=""input-group-text""><i");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 38918, "\"", 38954, 1);
#line 427 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 38926, Localizer.Text("iconPhone"), 38926, 28, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(38955, 1269, true);
            WriteLiteral(@"></i></span>
                                                        </div>
                                                        <div class=""input-group-prepend"">
                                                            <span class=""input-group-text"">+{{dataPaises.calling_code}}</span>
                                                            <input type=""hidden"" v-model=""registro.contacto.phoneNumber"" />
                                                        </div>
                                                        <input onPaste=""return false"" :disabled=""errorDocumentoAsociadoContactoPrincipal =='is-valid'?false:true"" :maxlength=""maxlegthTelefono"" v-on:keyup=""validarTelefonoContactoPrincipal()"" v-model=""registro.contacto.phoneNumber"" type=""text"" :class=""['form-control',errorTelefonoContactoPrincipal]"" :placeholder=""placeholderTelefono"">
                                                    </div>
                                                    <span class=""text-danger"">{{errorTelefon");
            WriteLiteral("oContactoTextoPrincipal}}</span>\r\n                                                </div>\r\n                                                <div class=\"from-group col-sm-12\">\r\n                                                    <label for=\"email\">");
            EndContext();
            BeginContext(40225, 28, false);
#line 438 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                  Write(Localizer.Text("textoEmail"));

#line default
#line hidden
            EndContext();
            BeginContext(40253, 683, true);
            WriteLiteral(@"</label>
                                                    <div class=""input-group"">
                                                        <div class=""input-group-prepend"">
                                                            <span class=""input-group-text""><i class=""fa fa-envelope""></i></span>
                                                        </div>
                                                        <input onPaste=""return false"" :disabled=""errorDocumentoAsociadoContactoPrincipal =='is-valid'?false:true"" maxlength=""60"" v-on:keyup=""validarEmailContactoPrincipal()"" v-model=""registro.contacto.email"" :class=""['form-control',errorEmailContactoPrincipal]""");
            EndContext();
            BeginWriteAttribute("placeholder", " placeholder=\"", 40936, "\"", 40985, 1);
#line 443 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 40950, Localizer.Text("placeholderEmail"), 40950, 35, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(40986, 1248, true);
            WriteLiteral(@">

                                                    </div>
                                                    <span class=""text-danger"">{{errorEmailContactoTextoPrincipal}}</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </v-expand-transition>

                        <v-card color=""#fafafa"" elevation=""0"" class=""mx-auto"" max-width=""95%"">

                            <div class=""row"">
                                <div class=""col-sm-3"">
                                    <div v-if=""botonSiguiente==0 ? false : true"">
                                        <v-tooltip top>
                                            <template v-slot:activator=""{ on }"">
                                                <v-icon v-on=""on"" :disabled=""botonSig");
            WriteLiteral("uiente==0 ? true : false\" large color=\"#5867dd\" v-on:click=\"botonSiguiente = 0\">mdi-arrow-left-bold-circle</v-icon>\r\n                                            </template>\r\n                                            <span>");
            EndContext();
            BeginContext(42235, 32, false);
#line 465 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                             Write(Localizer.Text("buttonPrevious"));

#line default
#line hidden
            EndContext();
            BeginContext(42267, 103, true);
            WriteLiteral("</span>\r\n                                        </v-tooltip>\r\n                                        ");
            EndContext();
            BeginContext(42371, 32, false);
#line 467 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                   Write(Localizer.Text("buttonPrevious"));

#line default
#line hidden
            EndContext();
            BeginContext(42403, 626, true);
            WriteLiteral(@"
                                    </div>
                                </div>
                                <div class=""col-sm-6"">
                                    <button type=""button"" style=""color:#ffffff"" :disabled=""habilitarbotonFormulario"" class=""btn btn-block btnColor"" v-on:click=""guardarActualizacion(registro)"">Actualizar</button>
                                </div>
                                <div class=""col-sm-3 text-right"">
                                    <div v-if=""botonSiguiente==1 || registro.user.discriminator !='LEGAL' ? false : true"">
                                        ");
            EndContext();
            BeginContext(43030, 28, false);
#line 475 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                   Write(Localizer.Text("buttonNext"));

#line default
#line hidden
            EndContext();
            BeginContext(43058, 492, true);
            WriteLiteral(@"
                                        <v-tooltip top>
                                            <template v-slot:activator=""{ on }"">
                                                <v-icon v-on=""on"" :disabled=""botonSiguiente==1 || registro.user.discriminator !='LEGAL' ? true : false"" large color=""#5867dd"" v-on:click=""botonSiguiente = 1"">mdi-arrow-right-bold-circle</v-icon>
                                            </template>
                                            <span>");
            EndContext();
            BeginContext(43551, 28, false);
#line 480 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                             Write(Localizer.Text("buttonNext"));

#line default
#line hidden
            EndContext();
            BeginContext(43579, 724, true);
            WriteLiteral(@"</span>
                                        </v-tooltip>
                                    </div>
                                </div>
                            </div>

                        </v-card>

                        <!---------------------------------------------- Panel Cuentas Bancarias ---------------------------------------------------------->

                        <div v-if=""registro.user.participant != 'CONFIRMANT'"" class=""card shadow mb-4"">
                            <div class=""card-header py-3 d-flex flex-row align-items-center justify-content-between"">
                                <h4 class=""m-0 font-weight-bold text-primary"">
                                    <i");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 44303, "\"", 44343, 1);
#line 493 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 44311, Localizer.Text("iconTitleBank"), 44311, 32, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(44344, 6, true);
            WriteLiteral("></i> ");
            EndContext();
            BeginContext(44351, 35, false);
#line 493 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                Write(Localizer.Text("titleBankAccounts"));

#line default
#line hidden
            EndContext();
            BeginContext(44386, 186, true);
            WriteLiteral("\r\n                                </h4>\r\n                                <div class=\"dropdown no-arrow\">\r\n                                    <span class=\"font-weight-bold text-primary\">");
            EndContext();
            BeginContext(44573, 31, false);
#line 496 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                           Write(Localizer.Text("buttonOptions"));

#line default
#line hidden
            EndContext();
            BeginContext(44604, 571, true);
            WriteLiteral(@"</span>
                                    <a class=""dropdown-toggle font-weight-bold"" href=""#"" role=""button"" id=""dropdownMenuLink"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                        <i class=""fas fa-ellipsis-v fa-sm fa-fw text-gray-400""></i>
                                    </a>
                                    <div class=""dropdown-menu dropdown-menu-right shadow animated--fade-in"" aria-labelledby=""dropdownMenuLink"">

                                        <button class=""dropdown-item btn-link"" ");
            EndContext();
            BeginContext(45176, 88, true);
            WriteLiteral("@click=\"dialogCuentas = !dialogCuentas\">\r\n                                            <i");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 45264, "\"", 45298, 1);
#line 503 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 45272, Localizer.Text("iconAdd"), 45272, 26, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(45299, 6, true);
            WriteLiteral("></i> ");
            EndContext();
            BeginContext(45306, 27, false);
#line 503 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                  Write(Localizer.Text("buttonAdd"));

#line default
#line hidden
            EndContext();
            BeginContext(45333, 1251, true);
            WriteLiteral(@"
                                        </button>

                                    </div>
                                </div>
                            </div>
                            <div v-if=""registro.registrarse.accounts != null"">
                                <div v-show=""registro.registrarse.accounts.length != 0"" class=""card-body"">
                                    <div class=""row"">
                                        <div class=""col-md-12"">
                                            <v-data-table :headers=""headersBanco""
                                                          :items=""registro.registrarse.accounts""
                                                          :items-per-page=""5""
                                                          class=""elevation-1"">

                                                <template v-slot:item.entity=""{ item }"">
                                                    {{registro.nombresBancos[registro.registrarse.accounts.in");
            WriteLiteral("dexOf(item)]}}\r\n                                                </template>\r\n\r\n                                                <template v-slot:item.default=\"{ item }\">\r\n                                                    <span");
            EndContext();
            BeginWriteAttribute("title", " title=\"", 46584, "\"", 46631, 1);
#line 523 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 46592, Localizer.Text("textoCuentaPrincipal"), 46592, 39, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(46632, 136, true);
            WriteLiteral(" v-if=\"item.default == true\" class=\"far fa-check-circle text-success\"></span>\r\n                                                    <span");
            EndContext();
            BeginWriteAttribute("title", " title=\"", 46768, "\"", 46815, 1);
#line 524 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 46776, Localizer.Text("tipCuentaNoPrincipal"), 46776, 39, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(46816, 1062, true);
            WriteLiteral(@" v-else class=""far fa-times-circle text-danger""></span>
                                                </template>

                                                <template v-slot:item.currency=""{ item }"">
                                                    <span v-for=""moneda in dataPaises.currencies"">
                                                        <span v-if=""moneda.id == item.currency"">
                                                            <span class=""text-xs badge bg-gray-200"">
                                                                {{moneda.symbol}}
                                                            </span>
                                                        </span>
                                                    </span>
                                                </template>

                                                <template v-slot:item.account=""{ item }"">

                                                    <div title=""Cuenta Ahorro""");
            WriteLiteral(" v-if=\"item.accountType == \'SAVINGS\'\">");
            EndContext();
            BeginContext(47879, 35, false);
#line 539 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                               Write(Localizer.Text("textoCuentaAhorro"));

#line default
#line hidden
            EndContext();
            BeginContext(47914, 128, true);
            WriteLiteral("</div>\r\n                                                    <div title=\"Cuenta Corriente\" v-if=\"item.accountType == \'CHECKING\'\">");
            EndContext();
            BeginContext(48043, 38, false);
#line 540 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                                   Write(Localizer.Text("textoCuentaCorriente"));

#line default
#line hidden
            EndContext();
            BeginContext(48081, 136, true);
            WriteLiteral("</div>\r\n                                                    <div title=\"Solicitud de Cuenta Nueva\" v-if=\"item.accountType == \'REQUEST\'\">");
            EndContext();
            BeginContext(48218, 38, false);
#line 541 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                                           Write(Localizer.Text("textoCuentaSolicitud"));

#line default
#line hidden
            EndContext();
            BeginContext(48256, 664, true);
            WriteLiteral(@"</div>

                                                </template>

                                                <template v-slot:item.action=""{ item }"">

                                                    <div class=""btn-toolbar justify-content-center"" role=""toolbar"" aria-label=""Toolbar with button groups"">
                                                        <div class=""btn-group mr-2"" role=""group"" aria-label=""First group"">
                                                            <button v-if=""item.accountType != 'REQUEST'"" v-on:click=""seleccionCuenta(item, registro.registrarse.accounts.indexOf(item))"" class=""btn btn-sm btn-primary""><i");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 48920, "\"", 48955, 1);
#line 549 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 48928, Localizer.Text("iconEdit"), 48928, 27, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(48956, 6, true);
            WriteLiteral("></i> ");
            EndContext();
            BeginContext(48963, 28, false);
#line 549 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                                                                                                                                                                               Write(Localizer.Text("buttonEdit"));

#line default
#line hidden
            EndContext();
            BeginContext(48991, 332, true);
            WriteLiteral(@"</button>
                                                            &nbsp;
                                                            <button v-if=""registro.registrarse.accounts.length > 1"" v-on:click=""borrarCuentaSelect = registro.registrarse.accounts.indexOf(item); dialogBorrarCuenta = true"" class=""btn btn-sm btn-danger""><i");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 49323, "\"", 49360, 1);
#line 551 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 49331, Localizer.Text("iconDelete"), 49331, 29, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(49361, 6, true);
            WriteLiteral("></i> ");
            EndContext();
            BeginContext(49368, 30, false);
#line 551 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                                                                                                                                                                                                                    Write(Localizer.Text("buttonDelete"));

#line default
#line hidden
            EndContext();
            BeginContext(49398, 892, true);
            WriteLiteral(@"</button>
                                                        </div>
                                                    </div>

                                                </template>
                                            </v-data-table>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!---------------------------------------------- Modal Banco --------------------------------------------------------------------->

                        <v-dialog v-model=""dialogCuentas"" persistent max-width=""600"">
                            <v-card>
                                <v-card-title class=""headline"">
                                    <h4>
                                        ");
            EndContext();
            BeginContext(50291, 35, false);
#line 569 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                   Write(Localizer.Text("titleBankAccounts"));

#line default
#line hidden
            EndContext();
            BeginContext(50326, 152, true);
            WriteLiteral("\r\n                                    </h4>\r\n                                    <v-spacer></v-spacer>\r\n                                    <v-btn icon ");
            EndContext();
            BeginContext(50479, 117, true);
            WriteLiteral("@click=\"dialogCuentas = false\">\r\n                                        <v-icon v-on:click=\"resetearInputCuentas()\">");
            EndContext();
            BeginContext(50597, 30, false);
#line 573 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                               Write(Localizer.Text("iconCloseMDI"));

#line default
#line hidden
            EndContext();
            BeginContext(50627, 686, true);
            WriteLiteral(@"</v-icon>
                                    </v-btn>
                                </v-card-title>

                                <v-card-text>
                                    <div>
                                        <div class=""row"">

                                            <div v-if=""errorCuentasBancariasGestionCuenta != '' && errorCuentasBancariasGestionCuenta != null"" class=""col-sm-12""><div class=""text-danger"">{{ errorCuentasBancariasGestionCuenta }}</div></div>
                                            <br />
                                            <div class=""from-group col-md-12"">
                                                <label>");
            EndContext();
            BeginContext(51314, 36, false);
#line 584 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                  Write(Localizer.Text("textobankingEntity"));

#line default
#line hidden
            EndContext();
            BeginContext(51350, 261, true);
            WriteLiteral(@"</label>
                                                <div class=""input-group"">
                                                    <div class=""input-group-prepend"">
                                                        <span class=""input-group-text""><i");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 51611, "\"", 51646, 1);
#line 587 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 51619, Localizer.Text("iconBank"), 51619, 27, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(51647, 181, true);
            WriteLiteral("></i></span>\r\n                                                    </div>\r\n                                                    <select v-on:change=\"validarSeleccionBancaria($event)\" ");
            EndContext();
            BeginContext(51829, 172, true);
            WriteLiteral("@blur=\"validarSeleccionBancaria($event)\" v-model=\"registro.cuentaActual.entity\" :class=\"[\'form-control\',idBanco]\">\r\n                                                        ");
            EndContext();
            BeginContext(52001, 187, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a132139", async() => {
                BeginContext(52138, 41, false);
#line 590 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                                                                                                           Write(Localizer.Text("placeholderCurrencyType"));

#line default
#line hidden
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("disabled", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_22);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_23);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(52188, 58, true);
            WriteLiteral("\r\n                                                        ");
            EndContext();
            BeginContext(52246, 93, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a134199", async() => {
                BeginContext(52309, 21, true);
                WriteLiteral("{{banco.person.name}}");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_24);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_25);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(52339, 776, true);
            WriteLiteral(@"
                                                    </select>
                                                </div>
                                                <span class=""text-danger"">{{idBancoTexto}}</span>
                                            </div>
                                            <!--Construccion Radio Button-->
                                            <div class=""from-group col-md-12"">
                                                <div class=""row"">
                                                    <div class=""col-md-4"">
                                                        <input type=""radio"" id=""one"" value=""Gestion de Cuenta"" v-model=""picked"">
                                                        <label for=""one"">");
            EndContext();
            BeginContext(53116, 39, false);
#line 601 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                    Write(Localizer.Text("textoAssociateAccount"));

#line default
#line hidden
            EndContext();
            BeginContext(53155, 146, true);
            WriteLiteral("</label>\r\n                                                    </div>\r\n                                                    <div class=\"col-md-4\">\r\n");
            EndContext();
            BeginContext(53668, 395, true);
            WriteLiteral(@"                                                    </div>
                                                    <div class=""col-md-4"">
                                                        <input type=""checkbox"" :disabled=""picked == 'Gestion de Cuenta'? false : true"" v-bind:id=""pickedCheck"" v-model=""pickedCheck"">
                                                        <label for=""Cuenta"">");
            EndContext();
            BeginContext(54064, 38, false);
#line 611 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                       Write(Localizer.Text("textoCuentaPrincipal"));

#line default
#line hidden
            EndContext();
            BeginContext(54102, 322, true);
            WriteLiteral(@"</label>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""from-group col-sm-12 col-md-6"">
                                                <label>");
            EndContext();
            BeginContext(54425, 32, false);
#line 616 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                  Write(Localizer.Text("textonameOwner"));

#line default
#line hidden
            EndContext();
            BeginContext(54457, 261, true);
            WriteLiteral(@"</label>
                                                <div class=""input-group"">
                                                    <div class=""input-group-prepend"">
                                                        <span class=""input-group-text""><i");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 54718, "\"", 54761, 1);
#line 619 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 54726, Localizer.Text("iconNameUserBank"), 54726, 35, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(54762, 309, true);
            WriteLiteral(@"></i></span>
                                                    </div>
                                                    <input maxlength=""255"" disabled v-model=""registro.user.discriminator =='LEGAL' ? registro.registrarse.company : registro.registrarse.firstName"" :class=""['form-control',TituluarBanco]""");
            EndContext();
            BeginWriteAttribute("placeholder", " placeholder=\"", 55071, "\"", 55118, 1);
#line 621 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 55085, Localizer.Text("textonameOwner"), 55085, 33, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(55119, 378, true);
            WriteLiteral(@">
                                                </div>
                                                <span class=""text-danger"">{{ TituluarBancoTexto }}</span>
                                            </div>
                                            <div class=""from-group col-sm-12 col-md-6"">
                                                <label for=""lstMoneda"">");
            EndContext();
            BeginContext(55498, 35, false);
#line 626 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                  Write(Localizer.Text("textotypeCurrency"));

#line default
#line hidden
            EndContext();
            BeginContext(55533, 261, true);
            WriteLiteral(@"</label>
                                                <div class=""input-group"">
                                                    <div class=""input-group-prepend"">
                                                        <span class=""input-group-text""><i");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 55794, "\"", 55833, 1);
#line 629 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 55802, Localizer.Text("iconCoinType"), 55802, 31, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(55834, 415, true);
            WriteLiteral(@"></i></span>
                                                    </div>
                                                    <select :disabled=""picked == 'Gestion de Cuenta'? false : true"" v-on:blur=""validarSeleccionTipoMoneda()"" :class=""['form-control',tipoMonedaBanco]"" v-on:change=""validarSeleccionTipoMoneda()"" v-model=""registro.cuentaActual.currency"">
                                                        ");
            EndContext();
            BeginContext(56249, 193, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a142079", async() => {
                BeginContext(56392, 41, false);
#line 632 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                                                                                                                 Write(Localizer.Text("placeholderCurrencyType"));

#line default
#line hidden
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("disabled", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_26);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_27);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(56442, 58, true);
            WriteLiteral("\r\n                                                        ");
            EndContext();
            BeginContext(56500, 85, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a144145", async() => {
                BeginContext(56563, 13, true);
                WriteLiteral("{{curr.name}}");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_28);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_29);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(56585, 710, true);
            WriteLiteral(@"
                                                    </select>
                                                </div>
                                                <span class=""text-danger"">
                                                    {{tipoMonedaBancoTexto}}
                                                </span>
                                            </div>
                                            <div class=""col-sm-12""></div>
                                        </div>
                                        <div class=""row"">
                                            <div class=""from-group col-sm-12 col-md-6"">
                                                <label>");
            EndContext();
            BeginContext(57296, 36, false);
#line 644 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                  Write(Localizer.Text("textoaccountNumber"));

#line default
#line hidden
            EndContext();
            BeginContext(57332, 261, true);
            WriteLiteral(@"</label>
                                                <div class=""input-group"">
                                                    <div class=""input-group-prepend"">
                                                        <span class=""input-group-text""><i");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 57593, "\"", 57634, 1);
#line 647 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 57601, Localizer.Text("iconNumberBank"), 57601, 33, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(57635, 913, true);
            WriteLiteral(@"></i></span>
                                                    </div>
                                                    <input onPaste=""return false"" :maxlength=""maxlegthCuentaBancaria"" :disabled=""picked == 'Gestion de Cuenta'? false : true"" :class=""['form-control',numeroCuentaBanco]"" v-on:keyup=""validarnumeroCuentaBanco()"" v-model=""registro.cuentaActual.accountNumber"" :placeholder=""placeholderCuentaBancaria"">
                                                </div>
                                                <span class=""text-danger"">
                                                    {{ numeroCuentaBancoTexto }}
                                                </span>
                                            </div>
                                            <div class=""from-group col-sm-12 col-md-6"" :class=""tipoCuentaBanco"">
                                                <label>");
            EndContext();
            BeginContext(58549, 34, false);
#line 656 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                  Write(Localizer.Text("textoaccountType"));

#line default
#line hidden
            EndContext();
            BeginContext(58583, 261, true);
            WriteLiteral(@"</label>
                                                <div class=""input-group"">
                                                    <div class=""input-group-prepend"">
                                                        <span class=""input-group-text""><i");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 58844, "\"", 58886, 1);
#line 659 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
WriteAttributeValue("", 58852, Localizer.Text("iconAccountType"), 58852, 34, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(58887, 418, true);
            WriteLiteral(@"></i></span>
                                                    </div>
                                                    <select :disabled=""picked == 'Gestion de Cuenta'? false : true"" v-on:blur=""validarSeleccionTipoCuenta()"" v-on:change=""validarSeleccionTipoCuenta()"" v-model=""registro.cuentaActual.accountType"" :class=""['form-control',tipoCuentaBanco]"">
                                                        ");
            EndContext();
            BeginContext(59305, 202, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a149841", async() => {
                BeginContext(59458, 40, false);
#line 662 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                                                                                                                           Write(Localizer.Text("placeholderAccountType"));

#line default
#line hidden
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("disabled", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_30);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_31);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(59507, 58, true);
            WriteLiteral("\r\n                                                        ");
            EndContext();
            BeginContext(59565, 86, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a151916", async() => {
                BeginContext(59636, 6, true);
                WriteLiteral("Ahorro");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_32);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_33.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_33);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(59651, 58, true);
            WriteLiteral("\r\n                                                        ");
            EndContext();
            BeginContext(59709, 43, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a153440", async() => {
                BeginContext(59734, 9, true);
                WriteLiteral("Corriente");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_34.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_34);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(59752, 657, true);
            WriteLiteral(@"
                                                    </select>
                                                </div>
                                                <span class=""text-danger"">{{ tipoCuentaBancoTexto }}</span>
                                            </div>

                                        </div>
                                    </div>
                                </v-card-text>

                                <v-card-actions>
                                    <v-spacer></v-spacer>
                                    <button type=""button"" class=""btn btn-danger mr-2"" v-on:click=""resetearInputCuentas()"">");
            EndContext();
            BeginContext(60410, 29, false);
#line 676 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                                     Write(Localizer.Text("buttonClose"));

#line default
#line hidden
            EndContext();
            BeginContext(60439, 230, true);
            WriteLiteral("</button>\r\n                                    <button :disabled=\"habilitarGuardarCuentas\" v-on:click=\"registro.user.participant == \'BACKOFFICE\' ? guardarCuentaBackOffice() : guardarCuenta()\" type=\"button\" class=\"btn btn-success\">");
            EndContext();
            BeginContext(60670, 35, false);
#line 677 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                                                                                                                                      Write(Localizer.Text("buttonSaveAccount"));

#line default
#line hidden
            EndContext();
            BeginContext(60705, 911, true);
            WriteLiteral(@"</button>
                                </v-card-actions>
                            </v-card>
                        </v-dialog>
                        <!----------------------------------------------- Modal Banco--------------------------------------------------------------->
                        <!----------------------------------------------- Modal Contratos--------------------------------------------------------------->

                        <div v-if=""registro.user.participant != 'BACKOFFICE'"" class=""card shadow mb-4"">
                            <div class=""card-header py-3 d-flex flex-row align-items-center justify-content-between"">
                                <h4 class=""m-0 font-weight-bold text-primary"">
                                    <i class=""fas fa-file-signature""></i>

                                    <span>
                                        ");
            EndContext();
            BeginContext(61617, 32, false);
#line 690 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                   Write(Localizer.Text("titleContratos"));

#line default
#line hidden
            EndContext();
            BeginContext(61649, 801, true);
            WriteLiteral(@"
                                    </span>

                                </h4>

                            </div>
                            <div class=""card-body"">
                                <div class=""row"">
                                    <div class=""col-sm-12"">

                                        <v-data-table :headers=""headersContrato""
                                                      :items=""registro.perfil.agreements""
                                                      :items-per-page=""5""
                                                      class=""elevation-1"">

                                            <template v-slot:item.abbreviation=""{ item }"">
                                                <span v-if=""item.abbreviation == 'TERMS'"">");
            EndContext();
            BeginContext(62451, 40, false);
#line 706 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                     Write(Localizer.Text("Terminos y Condiciones"));

#line default
#line hidden
            EndContext();
            BeginContext(62491, 70, true);
            WriteLiteral("</span>\r\n                                                <span v-else>");
            EndContext();
            BeginContext(62562, 36, false);
#line 707 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                        Write(Localizer.Text("textoContratoMarco"));

#line default
#line hidden
            EndContext();
            BeginContext(62598, 499, true);
            WriteLiteral(@"</span>
                                            </template>

                                            <template v-slot:item.entity=""{ item }"">
                                                <span v-for=""(banco,index) in dataPaises.entities"" v-if=""banco.id == item.entity"">
                                                    {{banco.person.name}}
                                                </span>
                                                <span v-if=""item.entity == null"">");
            EndContext();
            BeginContext(63098, 31, false);
#line 714 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                            Write(Localizer.Text("textoNoAplica"));

#line default
#line hidden
            EndContext();
            BeginContext(63129, 1513, true);
            WriteLiteral(@"</span>
                                            </template>

                                            <template v-slot:item.accepted=""{ item }"">
                                                <span title=""Contrato Aceptado"" v-if=""item.accepted == true"" class=""far fa-thumbs-up text-success""></span>
                                                <span title=""Contrato Sin Aceptar"" v-else class=""far fa-thumbs-down text-danger""></span>
                                            </template>

                                            <template v-slot:item.fechaaceptada=""{ item }"">
                                                <span v-if=""item.acceptedAt == null"">{{ backEndDateFormat(item.createdAt)}}</span>
                                                <span v-else>{{ backEndDateFormat(item.acceptedAt) }}</span>
                                            </template>

                                            <template v-slot:item.action=""{ item }"">

                                 ");
            WriteLiteral(@"               <div class=""btn-toolbar justify-content-center"" role=""toolbar"" aria-label=""Toolbar with button groups"">
                                                    <div class=""btn-group mr-2"" role=""group"" aria-label=""First group"">
                                                        <button v-if=""item.abbreviation == 'TERMS' && registro.registrarse.participant == 'FACTOR'"" v-on:click=""dialogInversionista = true"" class=""btn btn-sm btn-primary""><i class=""fas fa-search""></i> ");
            EndContext();
            BeginContext(64643, 30, false);
#line 731 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                                                                                                                                                                    Write(Localizer.Text("buttonVerify"));

#line default
#line hidden
            EndContext();
            BeginContext(64673, 269, true);
            WriteLiteral(@" </button>
                                                        <button v-if=""item.abbreviation == 'TERMS' && registro.registrarse.participant != 'FACTOR'"" v-on:click=""contratoTerminoCondiciones = true"" class=""btn btn-sm btn-primary""><i class=""fas fa-search""></i>  ");
            EndContext();
            BeginContext(64943, 30, false);
#line 732 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                                                                                                                                                                            Write(Localizer.Text("buttonVerify"));

#line default
#line hidden
            EndContext();
            BeginContext(64973, 239, true);
            WriteLiteral("</button>\r\n                                                        <button v-if=\"item.abbreviation == \'MEMBERSHIP\'\" v-on:click=\"rellenarContrato(item); contratoProveedor = true\" class=\"btn btn-sm btn-primary\"><i class=\"fas fa-search\"></i> ");
            EndContext();
            BeginContext(65213, 30, false);
#line 733 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                                                                                                                                               Write(Localizer.Text("buttonVerify"));

#line default
#line hidden
            EndContext();
            BeginContext(65243, 713, true);
            WriteLiteral(@"</button>
                                                    </div>
                                                </div>

                                            </template>

                                        </v-data-table>

                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                    <v-dialog v-model=""dialogBorrarCuenta"" transition=""dialog-bottom-transition"" max-width=""700"">
                        <v-card>
                            <v-card-title class=""headline"">
                                <h4>
                                    ");
            EndContext();
            BeginContext(65957, 36, false);
#line 751 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                               Write(Localizer.Text("textoDeleteAccount"));

#line default
#line hidden
            EndContext();
            BeginContext(65993, 140, true);
            WriteLiteral("\r\n                                </h4>\r\n                                <v-spacer></v-spacer>\r\n                                <v-btn icon ");
            EndContext();
            BeginContext(66134, 82, true);
            WriteLiteral("@click=\"dialogBorrarCuenta = false\">\r\n                                    <v-icon>");
            EndContext();
            BeginContext(66217, 30, false);
#line 755 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                       Write(Localizer.Text("iconCloseMDI"));

#line default
#line hidden
            EndContext();
            BeginContext(66247, 300, true);
            WriteLiteral(@"</v-icon>
                                </v-btn>
                            </v-card-title>

                            <v-card-text>

                                <v-row>
                                    <v-col cols=""12"" md=""12"" sm=""12"">
                                        <p>");
            EndContext();
            BeginContext(66548, 39, false);
#line 763 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                      Write(Localizer.Text("textoEstaSeguroAccion"));

#line default
#line hidden
            EndContext();
            BeginContext(66587, 49, true);
            WriteLiteral("</p>\r\n                                        <p>");
            EndContext();
            BeginContext(66637, 36, false);
#line 764 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                      Write(Localizer.Text("textoBorradoCuenta"));

#line default
#line hidden
            EndContext();
            BeginContext(66673, 344, true);
            WriteLiteral(@"</p>
                                    </v-col>
                                </v-row>
                                <v-row>
                                    <v-col cols=""12"" md=""12"" sm=""12"">
                                        <span class=""float-right"">
                                            <v-btn dark color=""green"" ");
            EndContext();
            BeginContext(67018, 70, true);
            WriteLiteral("@click=\"borrarCuenta(borrarCuentaSelect); dialogBorrarCuenta = false\">");
            EndContext();
            BeginContext(67089, 29, false);
#line 770 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                                                        Write(Localizer.Text("buttonAcept"));

#line default
#line hidden
            EndContext();
            BeginContext(67118, 78, true);
            WriteLiteral("</v-btn>\r\n                                            <v-btn dark color=\"red\" ");
            EndContext();
            BeginContext(67197, 36, true);
            WriteLiteral("@click=\"dialogBorrarCuenta = false\">");
            EndContext();
            BeginContext(67234, 29, false);
#line 771 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                    Write(Localizer.Text("buttonClose"));

#line default
#line hidden
            EndContext();
            BeginContext(67263, 545, true);
            WriteLiteral(@"</v-btn>
                                        </span>
                                    </v-col>
                                </v-row>
                            </v-card-text>
                        </v-card>
                    </v-dialog>
                    <v-dialog v-model=""dialogBorrarAsociado"" transition=""dialog-bottom-transition"" max-width=""700"">
                        <v-card>
                            <v-card-title class=""headline"">
                                <h4>
                                    ");
            EndContext();
            BeginContext(67809, 33, false);
#line 782 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                               Write(Localizer.Text("textoDeleteAsoc"));

#line default
#line hidden
            EndContext();
            BeginContext(67842, 140, true);
            WriteLiteral("\r\n                                </h4>\r\n                                <v-spacer></v-spacer>\r\n                                <v-btn icon ");
            EndContext();
            BeginContext(67983, 84, true);
            WriteLiteral("@click=\"dialogBorrarAsociado = false\">\r\n                                    <v-icon>");
            EndContext();
            BeginContext(68068, 30, false);
#line 786 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                       Write(Localizer.Text("iconCloseMDI"));

#line default
#line hidden
            EndContext();
            BeginContext(68098, 300, true);
            WriteLiteral(@"</v-icon>
                                </v-btn>
                            </v-card-title>

                            <v-card-text>

                                <v-row>
                                    <v-col cols=""12"" md=""12"" sm=""12"">
                                        <p>");
            EndContext();
            BeginContext(68399, 39, false);
#line 794 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                      Write(Localizer.Text("textoEstaSeguroAccion"));

#line default
#line hidden
            EndContext();
            BeginContext(68438, 506, true);
            WriteLiteral(@"</p>
                                        <p>Se eliminará al {{ TitularAsociado == 'Proveedores' ? 'Proveedor' : 'Cliente' }} selecionado de forma permanente.</p>
                                    </v-col>
                                </v-row>
                                <v-row>
                                    <v-col cols=""12"" md=""12"" sm=""12"">
                                        <span class=""float-right"">
                                            <v-btn dark color=""green"" ");
            EndContext();
            BeginContext(68945, 74, true);
            WriteLiteral("@click=\"borrarAsociado(borrarCuentaSelect); dialogBorrarAsociado = false\">");
            EndContext();
            BeginContext(69020, 29, false);
#line 801 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                                                            Write(Localizer.Text("buttonAcept"));

#line default
#line hidden
            EndContext();
            BeginContext(69049, 78, true);
            WriteLiteral("</v-btn>\r\n                                            <v-btn dark color=\"red\" ");
            EndContext();
            BeginContext(69128, 38, true);
            WriteLiteral("@click=\"dialogBorrarAsociado = false\">");
            EndContext();
            BeginContext(69167, 29, false);
#line 802 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                                                                      Write(Localizer.Text("buttonClose"));

#line default
#line hidden
            EndContext();
            BeginContext(69196, 702, true);
            WriteLiteral(@"</v-btn>
                                        </span>
                                    </v-col>
                                </v-row>
                            </v-card-text>
                        </v-card>
                    </v-dialog>

                    <!--Contrato TuFactoring-->
                    <v-dialog v-model=""contratoProveedor"" scrollable max-width=""800"">
                        <v-card>
                            <v-card-title class=""headline"">                             
                                <small>CONTRATO ADHESION PROVEEDOR</small>
                                <v-spacer></v-spacer>
                                <v-btn icon float ");
            EndContext();
            BeginContext(69899, 81, true);
            WriteLiteral("@click=\"contratoProveedor = false\">\r\n                                    <v-icon>");
            EndContext();
            BeginContext(69981, 30, false);
#line 817 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                       Write(Localizer.Text("iconCloseMDI"));

#line default
#line hidden
            EndContext();
            BeginContext(70011, 22500, true);
            WriteLiteral(@"</v-icon>
                                </v-btn>
                                <div class=""ml-5""> <small>{{BancoSelected}}</small> </div>
                            </v-card-title>
                            <v-card-text>
                                <p class=""text-center"">
                                    Para todos los efectos y consecuencias derivadas de la aplicación y alcance de este contrato y con el fin de lograr una correcta y exacta interpretación de este documento las siguientes palabras, utilizadas en singular o plural, mayúsculas o minúsculas, resaltadas o no, femenino o masculino, y salvo que el contexto lo requiera de otra forma, las palabras o expresiones definidas en singular incluirán su forma plural y viceversa, teniendo todas ellas el único y exclusivo significado que se indica a continuación:

                                </p>

                                <p class=""text-justify"">
                                    EL BANCO: Corresponde a la persona jurídica i");
            WriteLiteral(@"dentificada en el encabezado de este documento.
                                </p>
                                <p class=""text-justify"">
                                    EL CLIENTE: Es la persona natural o jurídica titular de una cuenta o de cualquier otro servicio o producto ofrecido por EL BANCO quien, luego de cumplir las formalidades propias de afiliación al sistema de Banca Electrónica o Banca por Internet, particularmente al Sistema TuFactoring, quien, siendo aceptante o deudor de una o varias facturas, registre dichos instrumentos en el Sistema de manera que pudieran ser objeto de subasta para el pago anticipado de las mismas a sus proveedores o simplemente su pago al vencimiento.
                                </p>
                                <p class=""text-justify"">
                                    SISTEMA TUFACTORING (ó Sistema): Corresponde a un Desarrollo Tecnológico que permite al CLIENTE, a través del uso de los canales de banca por internet, realizar operaciones de registr");
            WriteLiteral(@"o, venta, compra, ordenar el pago o ceder Facturas de sus PROVEEDORES, así como intercambiar información exclusivamente relacionada con dichas Facturas.
                                </p>
                                <p class=""text-justify"">
                                    EMPRESA: Corresponde a la sociedad mercantil TUFACTORING SERVICIOS C.A. domiciliada en la ciudad de Caracas, Distrito Capital, constituida por documento inscrito por ante el Registro Mercantil xx de la Circunscripción Judicial del Distrito Capital y Estado Miranda, en fecha xxxxx de xxxxxx de xxxxx, bajo el N.° xx, Tomo xxxxxx. Creadora, propietaria y operadora del SISTEMA TUFACTORING.
                                </p>
                                <p class=""text-justify"">
                                    CLAVES DE ACCESO: Corresponde a un mecanismo de Seguridad de la Información Electrónica, constante de factores de autenticación tendentes a verificar la identidad de EL CLIENTE y de EL BANCO y la cualidad de éstos pa");
            WriteLiteral(@"ra realizar las operaciones propias del SISTEMA TUFACTORING. Estos factores de autenticación corresponderán a aquellos establecidos como Factor de autenticación categorías 2 y 3 de acuerdo a la Resolución Nº 641.10 emanada de la Superintendencia de las Instituciones del Sector Bancario (SUDEBAN) contentiva de las “Normas que Regulan el Uso de los Servicios de la Banca Electrónica”, publicada en la Gaceta Oficial de la República Bolivariana de Venezuela Nº 39.597 de fecha 19 de enero de 2011.
                                </p>
                                <p class=""text-justify"">
                                    DÍAS HÁBILES BANCARIOS: Corresponde a los días comprendidos entre lunes y viernes que, conforme al calendario bancario, sean laborables para los bancos.
                                </p>
                                <p class=""text-justify"">
                                    DERECHO DE CRÉDITO: corresponde al derecho que tiene el acreedor de una deuda que EL CLIENTE tiene obligació");
            WriteLiteral(@"n de pagar conforme a la Factura.
                                </p>
                                <p class=""text-justify"">
                                    DESCUENTO: A los únicos efectos de este contrato, corresponde a la cantidad resultante de aplicar la siguiente fórmula, al momento de efectuar las operaciones de venta de factura a través del Sistema:
                                </p>
                                <p class=""text-justify"">
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(VNXTD)<br />
                                    D=  _________ND<br />
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(360)
                                </p>
                                <p class=""text-justify"">
                                    Donde ""D"" significa Descuento, ""VN"" significa Valor Neto, ""TD"" significa Tasa de Descuento; ""ND"" significa el número de días que resulte de sumar los días naturales desde e inclusive la fecha en que se ");
            WriteLiteral(@"entregue al Proveedor el Precio de venta, respecto de un Derecho Adquirido, hasta inclusive la fecha de vencimiento de dicho derecho de Crédito.
                                </p>
                                <p class=""text-justify"">
                                    FACTURA: Corresponde al documento o título de carácter mercantil contentivo de una obligación de pago con ocasión de la adquisición de bienes o servicios por parte de EL CLIENTE.
                                </p>
                                <p class=""text-justify"">
                                    GASTO POR SERVICIO: Corresponde al monto que obtendrá LA EMPRESA con ocasión a la operación efectiva de la venta de Factura a El INVERSIONISTA o EL BANCO. Este monto corresponderá al resultado de la fórmula aplicable sobre el valor de cada Factura, que será descontado del precio de venta que recibirá EL PROVEEDOR. Este valor puede ser consultado en la página del Sistema.
                                </p>
                     ");
            WriteLiteral(@"           <p class=""text-justify"">
                                    INVERSIONISTA. Es la persona natural o jurídica que se convierte en acreedora de El CLIENTE como consecuencia de transacciones de compra de Facturas expedidas por EL PROVEEDOR originario, y a favor de quien este último acepta su cesión una vez que acepta el descuento ofertado por el Valor Neto de la factura subastada.
                                </p>
                                <p class=""text-justify"">
                                    VALOR NETO. Se refiere al monto resultante de restar al valor numérico expresado en el texto de la Factura todos los tributos o retenciones a los que hubiere lugar, incluso las notas de crédito, si existiesen. Dicho valor debe ser cargado por EL CLIENTE en el Sistema. En el caso del pago al vencimiento, EL BANCO podrá proceder a pagar dicho valor a EL PROVEEDOR o a EL INVERSIONISTA y, en caso de haberla comprado EL BANCO, retirar el monto correspondiente de la(s) cuenta(s) de EL CLIENTE o impu");
            WriteLiteral(@"tarlo a la línea de crédito correspondiente, de ser el caso.
                                </p>
                                <p class=""text-justify"">
                                    PRECIO DE VENTA: Corresponde al resultado de haber deducido del valor neto de las facturas, antes explicado, la tasa de descuento ofertada por EL INVERSIONISTA y aceptada por EL PROVEEDOR.
                                </p>
                                <p class=""text-justify"">
                                    PROVEEDOR. Es la persona natural o jurídica acreedora del CLIENTE como consecuencia de transacciones comerciales consistentes en la venta o suministro de bienes y/o servicios, por lo cual ha expedido una(s) Factura(s) cuyo(s) pago(s) está(n) a cargo del CLIENTE.
                                </p>
                                <p class=""text-justify"">
                                    TASA DE DESCUENTO: Corresponde a la tasa aceptada por EL PROVEEDOR para determinar el Descuento, la cual es ofer");
            WriteLiteral(@"tada por EL INVERSIONISTA durante el horario en que este activo el Mercado Electrónico y para cada operación de venta que realicen al amparo de este contrato. El cálculo del Descuento se realizará desde la fecha en que se efectúe el anticipo de fondos, hasta la fecha del vencimiento de la Factura.
                                </p>
                                <p class=""text-justify"">
                                    <b><u>CLÁUSULA PRIMERA</u></b>: En virtud del presente documento, EL PROVEEDOR manifiesta su conocimiento y expresa conformidad sobre la existencia de un Contrato de Servicio Confirming a través del Sistema TuFactoring que ha sido suscrito entre EL CLIENTE y EL BANCO, y en razón del mismo, conviene y acepta en ceder a EL INVERSIONISTA los Derechos de Crédito derivados de las Facturas con cargo a EL CLIENTE y a su favor, en las condiciones establecidas en el presente contrato; entendiendo que las Facturas fueron registradas previamente en el Sistema Tufactoring y que bastará que EL PROV");
            WriteLiteral(@"EEDOR autorice su oferta por medio del Sistema y que haya aceptado el Descuento ofertado para que surta efecto la cesión a EL INVERSIONISTA, según sea el caso, de los derechos de cobro de la(s) factura(s), para todos los efectos legales, una vez que el pago se encuentre disponible en  la cuenta desde la cual se materializará el pago a EL PROVEEDOR.
                                </p>
                                <p class=""text-justify"">
                                    EL PROVEEDOR, quien se encuentra en conocimiento de los términos y condiciones de uso del Sistema TuFactoring, ratifica su conformidad para que EL CLIENTE a través de EL BANCO le pague directamente a él o a EL INVERSIONISTA que haya adquirido las Facturas en el Sistema o que de haberla adquirido EL BANCO, éste último haga el cobro respectivo o lo impute a la línea de crédito o de confirming abierta a tal efecto, en los términos de este contrato.
                                </p>
                                <p class=""text-just");
            WriteLiteral(@"ify"">
                                    Las partes intervinientes en la operación convienen en que la formalización de las operaciones de venta de Facturas en la forma prevista en el presente contrato, harán prueba de la notificación y recepción de la transmisión de los Derechos de Crédito, así como la aceptación por parte de EL PROVEEDOR de dicha transmisión a favor de EL BANCO o de EL INVERSIONISTA, según sea el caso. No obstante, EL PROVEEDOR una vez que acepta el Descuento ofertado por la factura subastada, confirma dicha aceptación al manifestar su acuerdo con el contenido del contrato de cesión que se abrirá en la página al llegar a ese punto de la operación.
                                </p>
                                <p class=""text-justify"">
                                    <b><u>CLÁUSULA SEGUNDA:</u></b> Las Facturas que a solicitud de EL PROVEEDOR vayan a ser autorizadas para ser vendidas o descontadas por medio del Sistema Tufactoring, deberán estar autorizadas por la persona con l");
            WriteLiteral(@"as facultades para vender activos de la empresa.
                                </p>
                                <p class=""text-justify"">
                                    <b><u>CLÁUSULA TERCERA:</u></b> EL PROVEEDOR manifiesta que en caso de no tener operativa una Cuenta en EL BANCO en la cual se depositen los importes correspondientes a los fondos provenientes de la liquidación de la operación de venta de Facturas, autoriza por medio del presente contrato los procedimientos que sean necesarios para el pago y acepta que dicho pago deberá realizarse en la cuenta de LA EMPRESA para su posterior transferencia a la cuenta del banco indicado, considerando entonces los días establecidos en la banca para que se hagan efectivos los fondos provenientes por trasferencias entre bancos. LA EMPRESA no se hace responsable por cualquier inconveniente o requerimiento que presente el sistema de transferencias bancarias y, en virtud de ello, EL PROVEEDOR acepta también las deducciones que pudiere haber por concepto ");
            WriteLiteral(@"de comisiones bancarias.
                                </p>
                                <p class=""text-justify"">
                                    <b><u>CLÁUSULA QUINTA:</u></b> EL PROVEEDOR está de acuerdo en que el Precio de venta que pagará EL INVERSIONISTA, será el que se publica en el Sistema TuFactoring, el cual se obtiene de la aplicación de la fórmula establecida para tal efecto en el presente instrumento. No estarán sujetas a la venta de facturas aquellas cuyo vencimiento sea menor a 30 días calendario contados a partir de la fecha de publicación y mayor a 180 días de vencimiento desde la fecha de publicación.
                                    La tasa de Descuentos se calculará aplicando la tasa de descuento ofrecida por EL INVERSIONISTA a través del Sistema de Tufactoring, entendiéndose que será decisión de EL PROVEEDOR si acepta o no la misma y como tal la venta de la factura, pudiendo, obviamente, rechazar dicha oferta.
                                </p>
                         ");
            WriteLiteral(@"       <p class=""text-justify"">
                                    <b><u>CLÁUSULA SEXTA:</u></b> Mediante el registro en el Sistema TuFactoring, EL PROVEEDOR acepta expresamente las particularidades y condiciones expresadas en este instrumento. En consecuencia, EL PROVEEDOR manifiesta su conformidad para el cobro del Precio como contraprestación de la transmisión de los Derechos de Crédito contenidos en la Factura producto de las operaciones de venta que realice bajo las condiciones del presente contrato.
                                </p>
                                <p class=""text-justify"">
                                    <b><u> CLÁUSULA SÉPTIMA:</u></b> EL PROVEEDOR reconoce que bastará sólo con la comunicación que por el Sistema Tufactoring reciba, de que fue realizada la transferencia para que se tenga como cubierta la operación, no haciéndose responsable LA EMPRESA por mal funcionamiento del sistema de transferencias bancarias.
                                </p>
                       ");
            WriteLiteral(@"         <p class=""text-justify"">
                                    <b><u>CLÁUSULA OCTAVA:</u></b> EL PROVEEDOR se obliga a verificar en todo momento que las solicitudes de venta de Facturas a través del Sistema Tufactoring, sean efectuadas por personas que tengan las facultades necesarias para ello. En este sentido, LA EMPRESA no será responsable por pérdidas económicas derivadas de mal uso de las Claves de Acceso asignadas a EL CLIENTE.
                                </p>
                                <p class=""text-justify"">
                                    EL PROVEEDOR tendrá hasta sesenta (60) minutos después del cierre de la jornada para aceptar la venta, en caso contrario deberá esperar hasta el día siguiente hábil para publicarla nuevamente. En este punto, se indica que el horario del Sistema es el siguiente: Para operaciones de consulta las 24 horas del día y los 365 días del año; para afiliación en el sistema  o registro de facturas, en los días hábiles bancarios en horario comprendido d");
            WriteLiteral(@"e 8:00 a.m. a 3:00 p.m.; y para la oferta y compra de facturas, en horario comprendido de 8:00 a.m. a 12:00 p.m.; siempre y cuando no existan fallos o suspensiones del servicio electrónico, eléctrico o cualquier otra causa de fuerza mayor que imposibilite su empleo.
                                </p>
                                <p class=""text-justify"">
                                    La información e instrucciones que EL PROVEEDOR transmita o comunique mediante Sistema Tufactoring, tendrán pleno valor probatorio y fuerza legal para acreditar la operación realizada, el importe de la misma, su naturaleza, así como las características y alcance de sus instrucciones. EL PROVEEDOR acepta que el uso de los medios de identificación previstos en el contrato para realizar operaciones a través del Sistema, podrá equivaler a la firma autógrafa y producir los mismos efectos que las leyes otorgan a los documentos correspondientes.
                                </p>
                                <p class");
            WriteLiteral(@"=""text-justify"">
                                    <b><u>CLÁUSULA NOVENA:</u></b> EL PROVEEDOR entiende y acepta que la transmisión de las Facturas lleva implícito la transmisión de los Derechos de Crédito, así como todo lo que le corresponda por derecho sin reserva ni limitación, así como de las garantías que en su caso hubiesen sido pactadas en los mismos. Ello, de conformidad con el artículo 1.552 del Código Civil venezolano; no pudiendo por ninguna circunstancia negociar en forma alguna los Derechos de Crédito ya transmitidos a EL INVERSIONISTA.
                                </p>
                                <p class=""text-justify"">
                                    <b><u>CLÁUSULA DÉCIMA:</u></b> EL PROVEEDOR declara la existencia y legitimidad de los Derechos de Crédito Adquiridos y reflejados en la(s) factura(s) por él autorizadas, de conformidad con el artículo 124 del Código de Comercio.
                                </p>
                                <p class=""text-justify"">
     ");
            WriteLiteral(@"                               <b><u>CLÁUSULA DÉCIMA PRIMERA:</u></b> Sin perjuicio de las indicaciones contenidas en el contrato suscrito entre EL CLIENTE y EL BANCO para hacer uso del Sistema TuFactoring, EL PROVEEDOR garantizará que las Facturas de Crédito que cederá contarán con las características que a continuación se mencionan:
                                    a) Sean pagaderas en sus fechas de vencimiento.
                                    b) Sean de su exclusiva propiedad y que no han sido otorgados en garantía, embargados, negociados, pignorados ni gravados de manera alguna.
                                    c) Derivan de operaciones efectivas de ventas de bienes y/o servicios, realizadas dentro del desarrollo normal de sus operaciones con EL CLIENTE.
                                    d)  Los bienes y/o servicios vendidos que originen las Facturas han sido entregados y aceptados por EL CLIENTE a su entera satisfacción, y que no existirá ninguna controversia con respecto a las obligacion");
            WriteLiteral(@"es que consten en ella que comprueben la existencia de éstas. En caso contrario, EL PROVEEDOR de forma inmediata deberá reintegrar a EL BANCO o a EL INVERSIONISTA el monto total recibido por la operación.
                                    e)  No tiene ninguna obligación pendiente con EL CLIENTE relacionada con las Facturas, por lo que éste no podrá invocar compensación alguna ni rehusará realizar el pago a EL BANCO, ni tendrá ninguna excepción que oponer.

                                </p>
                                <p class=""text-justify"">
                                    <b><u>CLÁUSULA DÉCIMA SEGUNDA:</u></b> EL BANCO se reserva el derecho de confirmar a EL PROVEEDOR a través del Sistema Tufactoring sin necesidad de declaración o resolución judicial, en los siguientes casos:
                                    1)   Si EL PROVEEDOR acuerda su disolución anticipada o entra en liquidación de derecho o de       hecho, o por cualquier causa similar disminuye o menoscabe su solvencia económica");
            WriteLiteral(@"
                                    2) Por violación o incumplimiento por parte de EL PROVEEDOR de cualquiera de las obligaciones contraídas por él conforme a este contrato, o en cualquier contrato, convenio o acto jurídico que sea consecuencia de éste; incluyendo, sin limitar, el caso en que EL PROVEEDOR trasmita a un comprador, Facturas cuyo importe esté sujeto a un descuento o ajuste de cualquier índole.
                                    3)   En caso de que EL PROVEEDOR sea objeto de medidas por parte de algún organismo o institución, nacional o internacional, encargado de la Prevención de legitimación de capitales o lavado de activos:
                                    4) Cualquier otra que pudiera comprometer la seguridad de los clientes de EL BANCO o del propio banco o que sea una clara y evidente violación a la normativa bancaria vigente.

                                    Sin necesidad de declaración judicial alguna y, de acuerdo a sus políticas, EL BANCO podrá suspender de manera provisiona");
            WriteLiteral(@"l o definitiva a EL PROVEEDOR en el uso del servicio de conformidad con las disposiciones anteriores.
                                </p>
                                <p class=""text-justify"">
                                    <b><u>CLÁUSULA DÉCIMA TERCERA:</u></b> Toda operación de venta o descuento se considerará efectivamente realizada una vez que el Sistema Tufactoring emita a EL PROVEEDOR un mensaje de transferencia de precio de venta a la cuenta indicada por este último.
                                </p>
                                <p class=""text-justify"">
                                    <b><u>CLÁUSULA DÉCIMA CUARTA:</u></b> Todos los impuestos nacionales, regionales o municipales, y sus accesorios, que se causen con motivo de las operaciones descritas en este contrato, serán por cuenta exclusiva de EL PROVEEDOR, librando de cualquier responsabilidad al Banco, Inversionista, y a la empresa Tufactoring.
                                </p>
                                <p class=");
            WriteLiteral(@"""text-justify"">
                                    <b><u>CLÁUSULA DÉCIMA QUINTA:</u></b> Para los efectos del presente Contrato, EL PROVEEDOR señala como su domicilio el  indicado en el registro electrónico del Sistema Tufactoring; hasta tanto las partes intervinientes en la operación no se notifiquen por escrito los cambios de domicilio, todas las comunicaciones que se practiquen en los domicilios antes citados, surtirán plenamente sus  efectos.
                                </p>
                                <p class=""text-justify"">
                                    <b><u>CLÁUSULA DÉCIMA SEXTA</u></b> Para todos los efectos del presente contrato, sus derivados y consecuencias, se elige como domicilio especial aquel de la suscripción, aceptación o adhesión.
                                </p>
                            </v-card-text>
                            <v-card-actions>
                                <v-spacer></v-spacer>
                                ");
            EndContext();
            BeginContext(92511, 420, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a198286", async() => {
                BeginContext(92632, 295, true);
                WriteLiteral(@"
                                    <span class=""icon text-white-50"">
                                        <i class=""fas fa-download""></i>
                                    </span>
                                    <span class=""text"">Imprimir</span>
                                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_35);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_36);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_37);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(92931, 1556, true);
            WriteLiteral(@"

                                <span v-if=""agreementsContratoMarco != null"">
                                    &nbsp;
                                    <a href=""#"" v-if=""agreementsContratoMarco.accepted == false"" v-on:click=""AceptacionContrato"" class=""btn btn-success btn-icon-split"">
                                        <span class=""icon text-white-50"">
                                            <i class=""fas fa-check""></i>
                                        </span>
                                        <span class=""text"">Aceptar</span>
                                    </a>
                                </span>

                                &nbsp;
                                <a v-on:click=""contratoProveedor = false"" class=""btn btn-danger btn-icon-split"">
                                    <span class=""icon text-white-50"">
                                        <i class=""fas fa-times""></i>
                                    </span>
                             ");
            WriteLiteral(@"       <span class=""text"">Cerrar</span>
                                </a>
                            </v-card-actions>
                        </v-card>
                    </v-dialog>

                    <!--Terminos y condiciones-->
                    <v-dialog v-model=""contratoTerminoCondiciones"" scrollable max-width=""800"">
                        <v-card>
                            <v-card-title class=""headline"">
                                <h3 class=""text-center"">
                                    ");
            EndContext();
            BeginContext(94488, 40, false);
#line 986 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                               Write(Localizer.Text("Terminos y Condiciones"));

#line default
#line hidden
            EndContext();
            BeginContext(94528, 140, true);
            WriteLiteral("\r\n                                </h3>\r\n                                <v-spacer></v-spacer>\r\n                                <v-btn icon ");
            EndContext();
            BeginContext(94669, 90, true);
            WriteLiteral("@click=\"contratoTerminoCondiciones = false\">\r\n                                    <v-icon>");
            EndContext();
            BeginContext(94760, 30, false);
#line 990 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                       Write(Localizer.Text("iconCloseMDI"));

#line default
#line hidden
            EndContext();
            BeginContext(94790, 10079, true);
            WriteLiteral(@"</v-icon>
                                </v-btn>  
                            </v-card-title>
                            <v-card-text>
                                <p class=""text-center"">
                                    PARA EL INGRESO, REGISTRO Y USO DEL TUFACTORING SERVICIOS C.A.

                                </p>

                                <p class=""text-justify"">
                                    PRIMERO. En este documento  se establecen los términos y condiciones de uso del “Sistema Tufactoring “, en lo adelante “EL SISTEMA”, desarrollo tecnológico diseñado y operado por la sociedad mercantil TUFACTORING SERVICIOS C.A., domiciliada en la ciudad de Caracas, Distrito Capital, constituida por documento inscrito ante el Registro Mercantil XX de la Circunscripción Judicial del Distrito Capital y Estado Miranda, en fecha xxxxx de xxxxxx de xxxxx, bajo el N.º xx, Tomo xxxxxx,xxxxxxx, en lo adelante LA EMPRESA. En este sentido, el material mostrado u ofrecido en este Sitio Web, (m");
            WriteLiteral(@"aterial gráfico, documentos, textos, imágenes, sonido, video, audio, las ilustraciones, etc.) son de la exclusiva propiedad de LA EMPRESA.
                                </p>
                                <p class=""text-justify"">
                                    SEGUNDO: El registro en el Sistema implica la aceptación de los términos y condiciones establecidos en este Contrato, lo cual es indispensable para acceder, consultar o realizar cualquier operación en el presente Sitio Web.
                                </p>
                                <p class=""text-justify"">
                                    TERCERO: Para registrarse en EL SISTEMA se debe ser mayor de edad, civilmente hábil y residente en la República Bolivariana de Venezuela. Adicionalmente, para el registro en EL SISTEMA como Cliente, resulta imprescindible poseer una cuenta activa en el banco anfitrión (banco desde el cual se hace el enlace en el link de EL SISTEMA), no así en caso de registrarse como Proveedor o como Inversio");
            WriteLiteral(@"nista (ver Glosario). En estos dos últimos casos, el usuario queda informado y acepta, que el uso o participación de los servicios y operaciones en EL SISTEMA, no suponen el establecimiento de una relación comercial con EL BANCO, hasta tanto no cumplan con todos los requisitos establecidos por este instituto bancario en los contratos que regulan sus productos y servicios, todo ello de conformidad con lo establecido en la legislación vigente.
                                </p>
                                <p class=""text-justify"">
                                    CUARTO: LA EMPRESA está comprometida con la seguridad de los datos de sus usuarios, cumpliendo con los estándares de seguridad que exige el sistema bancario nacional. La información personal requerida y con la cual usted será identificado en EL SISTEMA, sólo se empleará de acuerdo con los términos de este documento. No obstante, el usuario asume todos los riesgos relativos a, o derivados de, el uso, consulta o acceso por su parte en el Siste");
            WriteLiteral(@"ma desde equipos distintos a los normalmente utilizados. Tampoco se hace responsable LA EMPRESA de fallas derivadas de los servicios de telefonía e Internet ni garantiza de forma alguna que el servicio del Sistema sea ininterrumpido o libre de error.
                                </p>
                                <p class=""text-justify"">
                                    QUINTO: Los equipos utilizados por el usuario para acceder a ésta página Web, son de su exclusiva responsabilidad; dichos equipos deberán cumplir con los requerimientos, indicaciones y especificaciones técnicas recomendadas por EL BANCO para el acceso a esta página. EL BANCO ni LA EMPRESA serán responsables por el buen funcionamiento, idoneidad, capacidad y compatibilidad de dichos equipos con esta página Web.
                                </p>
                                <p class=""text-justify"">
                                    SEXTO: Los contenidos publicados en esta página Web, pueden contener inexactitudes o imprecis");
            WriteLiteral(@"iones, por lo que EL BANCO se libera y desconoce cualquier tipo de responsabilidad sobre el particular; igualmente, EL BANCO no garantiza que los contenidos publicados en el sitio corresponden a información completa o actualizada, por lo cual, el usuario se compromete a verificar con EL BANCO, la información que allí se expresa, a través de cualquiera de sus agencias y sucursales.
                                </p>
                                <p class=""text-justify"">
                                    SÉPTIMO: La invalidez o inaplicabilidad de cualquiera de los presentes términos y condiciones -en todo o en parte-, no afecta la validez o la aplicabilidad de los demás. LA EMPRESA se reserva el derecho de actualizar el presente Contrato siempre que lo considere oportuno. En consecuencia, recomendamos al Usuario revisar periódicamente las modificaciones efectuadas al Contrato.
                                </p>
                                <p class=""text-justify"">
                              ");
            WriteLiteral(@"      OCTAVO: Estas condiciones generales se regirán e interpretarán de conformidad con leyes vigentes en la República Bolivariana de Venezuela. Las controversias que se deriven de las presentes condiciones generales, deberán ser interpuestas por ante los tribunales de la República Bolivariana de Venezuela.
                                </p>
                                <p class=""text-justify"">
                                    GLOSARIO
                                </p>
                                <p class=""text-justify"">
                                    EL BANCO: Corresponde a la persona jurídica confirmante de la operación, la cual garantiza el pago a EL INVERSIONISTA ganador de la operación de confirming (pago a proveedores), una vez que llegue(n) al vencimiento la(s) factura(s) por la que haya ofertado.
                                </p>
                                <p class=""text-justify"">
                                    EMPRESA: Corresponde a la sociedad mercantil TUFA");
            WriteLiteral(@"CTORING SERVICIOS C.A. domiciliada en la ciudad de Caracas, Distrito Capital, constituida por documento inscrito por ante el Registro Mercantil xx de la Circunscripción Judicial del Distrito Capital y Estado Miranda, en fecha xxxxx de xxxxxx de xxxxx, bajo el N.° xx, Tomo xxxxxx.
                                </p>
                                <p class=""text-justify"">
                                    SISTEMA TUFACTORING (ó Sistema): Corresponde a un Desarrollo Tecnológico que permite a EL CLIENTE, a través del uso de los canales de banca por internet, realizar operaciones de registro, venta, compra, ordenar el pago o ceder Facturas de sus proveedores, así como intercambiar información exclusivamente relacionada con dichas Facturas.
                                </p>
                                <p class=""text-justify"">
                                    EL CLIENTE: Es la persona natural o jurídica titular de una cuenta o de cualquier otro servicio o producto ofrecido por EL BANCO quien, lue");
            WriteLiteral(@"go de cumplir las formalidades propias de afiliación al sistema de Banca Electrónica o Banca por Internet, particularmente al Sistema TuFactoring, conforme al procedimiento señalado a tal efecto por EL BANCO, quien, siendo aceptante o deudor de una o varias facturas, registre dichos instrumentos en el Sistema de manera que pudieran ser objeto de subasta para el pago anticipado de las mismas a sus proveedores.
                                </p>
                                <p class=""text-justify"">
                                    INVERSIONISTA. Es la persona natural o jurídica que se convierte en acreedora de El CLIENTE como consecuencia de transacciones de compra de Facturas expedidas por EL PROVEEDOR originario, y a favor de quien este último acepta su cesión una vez que acepta el descuento ofertado por el Valor Neto de la factura subastada.
                                </p>
                                <p class=""text-justify"">
                                    PROVEEDOR. Es la persona ");
            WriteLiteral(@"natural o jurídica acreedora de EL CLIENTE como consecuencia de transacciones comerciales consistentes en la venta o suministro de bienes y/o servicios, por lo cual ha expedido una Factura cuyo pago está a cargo de EL CLIENTE.
                                </p>
                                <p class=""text-justify"">
                                    FACTURA: Corresponde al documento o título de carácter mercantil contentivo de una obligación de pago con ocasión de la adquisición de bienes o servicios por parte de EL CLIENTE.
                                </p>
                                <p class=""text-justify"">
                                    CLAVES DE ACCESO: Corresponde a un mecanismo de Seguridad de la Información Electrónica, constante de factores de autenticación tendentes a verificar la identidad de EL CLIENTE y de EL BANCO y la cualidad de éstos para realizar las operaciones propias del SISTEMA TUFACTORING. Estos factores de autenticación corresponderán a aquellos establecidos como");
            WriteLiteral(@" Factor de autenticación categorías 2 y 3 de acuerdo a la Resolución Nº 641.10 emanada de la Superintendencia de las Instituciones del Sector Bancario (SUDEBAN) contentiva de las “Normas que Regulan el Uso de los Servicios de la Banca Electrónica”, publicada en la Gaceta Oficial de la República Bolivariana de Venezuela Nº 39.597 de fecha 19 de enero de 2011.
                                </p>
                                <p class=""text-justify"">
                                    DÍAS HÁBILES BANCARIOS: Corresponde a los días comprendidos entre lunes y viernes que, conforme al calendario bancario, sean laborables para los bancos.
                                </p>
                            </v-card-text>
                            <v-card-actions>
                                <v-spacer></v-spacer>
                                ");
            EndContext();
            BeginContext(104869, 412, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a213224", async() => {
                BeginContext(104982, 295, true);
                WriteLiteral(@"
                                    <span class=""icon text-white-50"">
                                        <i class=""fas fa-download""></i>
                                    </span>
                                    <span class=""text"">Imprimir</span>
                                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_38);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_39);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_37);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(105281, 912, true);
            WriteLiteral(@"
                                &nbsp;

                                <a v-on:click=""contratoTerminoCondiciones = false"" class=""btn btn-danger btn-icon-split"">
                                    <span class=""icon text-white-50"">
                                        <i class=""fas fa-times""></i>
                                    </span>
                                    <span class=""text"">Cerrar</span>
                                </a>
                            </v-card-actions>
                        </v-card>
                    </v-dialog>

                    <!--Terminos y Condiciones Inversionista-->
                    <v-dialog v-model=""dialogInversionista"" max-width=""600px"">
                        <v-card>
                            <v-card-title class=""headline"">
                                <h3 class=""text-center"">
                                    ");
            EndContext();
            BeginContext(106194, 40, false);
#line 1079 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                               Write(Localizer.Text("Terminos y Condiciones"));

#line default
#line hidden
            EndContext();
            BeginContext(106234, 140, true);
            WriteLiteral("\r\n                                </h3>\r\n                                <v-spacer></v-spacer>\r\n                                <v-btn icon ");
            EndContext();
            BeginContext(106375, 83, true);
            WriteLiteral("@click=\"dialogInversionista = false\">\r\n                                    <v-icon>");
            EndContext();
            BeginContext(106459, 30, false);
#line 1083 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                       Write(Localizer.Text("iconCloseMDI"));

#line default
#line hidden
            EndContext();
            BeginContext(106489, 17072, true);
            WriteLiteral(@"</v-icon>
                                </v-btn>
                            </v-card-title>

                            <v-card-text>
                                <p class=""text-center"">
                                    CONTRATO ADHESION INVERSIONISTA
                                </p>

                                <p class=""text-center""> <u>DEFINICIONES</u> </p>

                                <p class=""text-justify"">
                                    Para todos los efectos y consecuencias derivadas de la aplicación y alcance de este contrato y con el fin de lograr una correcta y exacta interpretación de este documento las siguientes palabras, utilizadas en singular o plural, mayúsculas o minúsculas, resaltadas o no, femenino o masculino, y salvo que el contexto lo requiera de otra forma, las palabras o expresiones definidas en singular incluirán su forma plural y viceversa, teniendo todas ellas el único y exclusivo significado que se indica a continuación:
                    ");
            WriteLiteral(@"            </p>
                                <p class=""text-justify"">
                                    EL BANCO: Corresponde a la persona jurídica confirmante de la operación, la cual garantiza el pago a EL INVERSIONISTA ganador de la operación de confirming (pago a proveedores), una vez que llegue(n) al vencimiento la(s) factura(s) por la que haya ofertado.
                                </p>
                                <p class=""text-justify"">
                                    EMPRESA: Corresponde a la sociedad mercantil <b>TUFACTORING SERVICIOS C.A.</b> domiciliada en la ciudad de Caracas, Distrito Capital, constituida por documento inscrito por ante el Registro Mercantil xx de la Circunscripción Judicial del Distrito Capital y Estado Miranda, en fecha xxxxx de xxxxxx de xxxxx, bajo el N.° xx, Tomo xxxxxx.
                                </p>
                                <p class=""text-justify"">
                                    SISTEMA TUFACTORING (ó Sistema): Corresponde a un D");
            WriteLiteral(@"esarrollo Tecnológico que permite a EL CLIENTE, a través del uso de los canales de banca por internet, realizar operaciones de registro, venta, compra, ordenar el pago o ceder Facturas de sus proveedores, así como intercambiar información exclusivamente relacionada con dichas Facturas.
                                </p>
                                <p class=""text-justify"">
                                    INVERSIONISTA. Es la persona natural o jurídica que se convierte en acreedora de El CLIENTE como consecuencia de transacciones de compra de Facturas expedidas por EL PROVEEDOR originario, y a favor de quien este último acepta su cesión una vez que acepta el descuento ofertado por el Valor Neto de la factura subastada.
                                </p>
                                <p class=""text-justify"">
                                    EL CLIENTE: Es la persona natural o jurídica titular de una cuenta o de cualquier otro servicio o producto ofrecido por EL BANCO quien, luego de cumpli");
            WriteLiteral(@"r las formalidades propias de afiliación al sistema de Banca Electrónica o Banca por Internet, particularmente al Sistema TuFactoring, conforme al procedimiento señalado a tal efecto por EL BANCO, quien, siendo aceptante o deudor de una o varias facturas, registre dichos instrumentos en el Sistema de manera que pudieran ser objeto de subasta para el pago anticipado de las mismas a sus proveedores.
                                </p>
                                <p class=""text-justify"">
                                    PROVEEDOR. Es la persona natural o jurídica acreedora de EL CLIENTE como consecuencia de transacciones comerciales consistentes en la venta o suministro de bienes y/o servicios, por lo cual ha expedido una Factura cuyo pago está a cargo de EL CLIENTE.
                                </p>
                                <p class=""text-justify"">
                                    DESCUENTO: A los únicos efectos de este contrato, corresponde a la cantidad resultante de aplicar la sigu");
            WriteLiteral(@"iente fórmula, al momento de efectuar las operaciones de venta de factura a través del Sistema:
                                </p>
                                <p class=""text-justify"">
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(VNXTD)<br />
                                    D=_________ND<br />
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(360)

                                </p>
                                <p class=""text-justify"">
                                    Donde ""D"" significa Descuento, ""VN"" significa Valor Neto, ""TD"" significa Tasa de Descuento; ""ND"" significa el número de días que resulte de sumar los días naturales desde e inclusive la fecha en que se entregue al Proveedor el Precio de venta, respecto de un Derecho Adquirido, hasta inclusive la fecha de vencimiento de dicho derecho de Crédito.
                                </p>
                                <p class=""text-justify"">
                              ");
            WriteLiteral(@"      TASA DE DESCUENTO: Corresponde a la tasa aceptada por EL PROVEEDOR para determinar el Descuento que se va a aplicar al Valor Neto de la factura subastada, entre las distintas ofertas realizadas por los distintos inversionistas participantes durante horario en que se encuentre activo el Mercado Electrónico. El cálculo del Descuento se realizará desde la fecha en que se efectúe el anticipo de fondos, hasta la fecha del vencimiento de la Factura.
                                </p>
                                <p class=""text-justify"">
                                    FACTURA: Corresponde al documento o título de carácter mercantil contentivo de una obligación de pago con ocasión de la adquisición de bienes o servicios por parte de EL CLIENTE.
                                </p>
                                <p class=""text-justify"">
                                    VALOR NETO. Se refiere al monto resultante de restar al valor numérico expresado en el texto de la Factura todos los tributos");
            WriteLiteral(@" o retenciones a los que hubiere lugar, incluso las notas de crédito, si existiesen. Debe ser cargado por EL CLIENTE en el Sistema. En el caso del pago al vencimiento, EL BANCO podrá proceder a pagar dicho valor a EL PROVEEDOR o a EL INVERSIONISTA y, en caso de haberla comprado EL BANCO, retirar el monto correspondiente de la(s) cuenta(s) de EL CLIENTE o imputarlo a la línea de crédito correspondiente, de ser el caso.
                                </p>
                                <p class=""text-justify"">
                                    PRECIO DE VENTA: Corresponde al resultado de haber deducido del valor neto de las facturas, antes explicado, la tasa de descuento ofertada por EL INVERSIONISTA ganador en la respectiva operación, y la cual fue aceptada por EL PROVEEDOR.
                                </p>
                                <p class=""text-justify"">
                                    CLAVES DE ACCESO: Corresponde a un mecanismo de Seguridad de la Información Electrónica, constante ");
            WriteLiteral(@"de factores de autenticación tendentes a verificar la identidad de EL CLIENTE y de EL BANCO y la cualidad de éstos para realizar las operaciones propias del SISTEMA TUFACTORING. Estos factores de autenticación corresponderán a aquellos establecidos como Factor de autenticación categorías 2 y 3 de acuerdo a la Resolución Nº 641.10 emanada de la Superintendencia de las Instituciones del Sector Bancario (SUDEBAN) contentiva de las “Normas que Regulan el Uso de los Servicios de la Banca Electrónica”, publicada en la Gaceta Oficial de la República Bolivariana de Venezuela Nº 39.597 de fecha 19 de enero de 2011.
                                </p>
                                <p class=""text-justify"">
                                    DÍAS HÁBILES BANCARIOS: Corresponde a los días comprendidos entre lunes y viernes que, conforme al calendario bancario, sean laborables para los bancos.
                                </p>
                                <p class=""text-justify"">
                           ");
            WriteLiteral(@"         DERECHO DE CRÉDITO: corresponde al derecho que tiene el acreedor de una deuda QUE EL CLIENTE tiene obligación de pagar conforme a la Factura.
                                </p>
                                <p class=""text-justify"">
                                    <u><b>CLÁUSULA PRIMERA:</b></u> Mediante el registro en el Sistema Tufactoring y la aceptación del presente contrato de adhesión, EL INVERSIONISTA manifiesta su interés en participar en subastas para la compra de Facturas registradas previamente en el Sistema Tufactoring, en el marco de una operación de confirming (pago a proveedores). En virtud de ello, EL INVERSIONISTA acepta expresamente las particularidades y condiciones expresadas en este instrumento.
                                </p>
                                <p class=""text-justify"">
                                    La operación en la que participaría EL INVERSIONISTA consiste en que EL PROVEEDOR (a quien EL INVERSIONISTA podrá o no conocer)  una vez que haya ");
            WriteLiteral(@"aceptado la mejor oferta que arroje el Sistema Tufactoring con base en los descuentos propuestos por los distintos inversionistas, transmitirá a favor de EL INVERSIONISTA ganador todos los derechos de crédito inherentes a la factura y EL BANCO garantizará a este último el pago de la factura a su vencimiento por el valor neto que presenta el Sistema.
                                </p>
                                <p class=""text-justify"">
                                    <u><b> CLÁUSULA SEGUNDA:</b></u> EL INVERSIONISTA una vez registrado en el sistema, podrá participar en el mismo ofertando por la compra de facturas registradas por los clientes de EL BANCO  y autorizadas para su venta por los proveedores respectivos, dentro de los parámetros que el propio Sistema Tufactoring fija.
                                </p>
                                <p class=""text-justify"">
                                    <u><b>CLÁUSULA TERCERA:</b></u> EL INVERSIONISTA en caso de no tener operativa una Cuenta");
            WriteLiteral(@" en EL BANCO en el cual se depositen todos los importes correspondientes a los fondos provenientes de la liquidación de la operación de venta de Facturas, entiende y acepta que el pago del Precio de venta deberá realizarse en la cuenta de LA EMPRESA destinada para tal fin en EL BANCO.
                                </p>
                                <p class=""text-justify"">
                                    EL INVERSIONISTA asume las tarifas bancarias establecidas por el Banco Central de Venezuela por concepto de transferencia de fondos al momento en que se realice el pago así como impuestos actuales y futuros por concepto de débitos bancarios. En cualquier caso, de hacerse el pago a través de una transferencia por no disponer EL INVERSIONISTA de cuenta en EL BANCO, el Sistema Tufactoring y, por tanto, LA EMPRESA ni EL BANCO serán responsables de cualquier mal funcionamiento del sistema de transferencias bancarias.
                                </p>
                                <p class=""text-j");
            WriteLiteral(@"ustify"">
                                    <u><b>CLÁUSULA CUARTA:</b></u> EL INVERSIONISTA está en pleno conocimiento que compite en una puja en la que participan otros inversionistas, siendo informado por el sistema en el momento en que su oferta ha sido aceptada por EL PROVEEDOR. En consecuencia, EL INVERSIONISTA acepta que no obstante realice la mejor oferta, EL PROVEEDOR pudiera rechazarla sin que ello motive compensación ni indemnización alguna
                                </p>
                                <p class=""text-justify"">
                                    <u><b>CLÁUSULA QUINTA:</b></u> El Precio de venta que pagará EL INVERSIONISTA ganador, será el que se obtenga en el Sistema TuFactoring, aplicando al Valor Neto de la factura la tasa de descuento ofertada EL INVERSIONISTA ganador y aceptada por EL PROVEEDOR.
                                </p>
                                <p class=""text-justify"">
                                    <u><b>CLÁUSULA SEXTA:</b></u> EL INVERSION");
            WriteLiteral(@"ISTA está en conocimiento que EL PROVEEDOR tendrá hasta sesenta (60) minutos después del cierre de la jornada para aceptar la venta, en caso contrario se tendrá como rechazada la oferta. En este punto, se indica que el horario del sistema es el siguiente: Para operaciones de consulta las 24 horas del día y los 365 días del año; para afiliación en el sistema  o registro de facturas, en los días hábiles bancarios en horario comprendido de 8:00 a.m. a 3:00 p.m.; y para la oferta de facturas, en horario comprendido de 8:00 a.m. a 12:00 p.m.; siempre y cuando no existan fallos o suspensiones del servicio electrónico, eléctrico o cualquier otra causa de fuerza mayor que imposibilite su empleo.
                                </p>
                                <p class=""text-justify"">
                                    <u><b>CLÁUSULA SÉPTIMA:</b></u> EL INVERSIONISTA acepta que bastará sólo con la comunicación que por el Sistema Tufactoring reciba respecto a que su oferta fue aceptada para realizar el pago en ");
            WriteLiteral(@"un plazo máximo de sesenta (60) minutos. Una vez transcurrido dicho lapso sin que se haya verificado el pago, la operación queda anulada y EL INVERSIONISTA será bloqueado en El Sistema, debiendo asumir los gastos administrativos inherentes a la operación.
                                </p>
                                <p class=""text-justify"">
                                    <u><b>CLÁUSULA OCTAVA:</b></u> EL BANCO podrá verificar en todo momento a las personas naturales o jurídicas que se registren como inversionistas en el Sistema Tufactoring, reservándose el derecho de rechazar su inclusión en el sistema sin necesidad de declaración o resolución judicial, en caso de que EL INVERSIONISTA sea objeto de medidas o de investigación por parte de algún organismo o institución, nacional o internacional, encargado de la Prevención de legitimación de capitales o lavado de activos o por cualquier causa que razonablemente pudiera comprometer la seguridad de los clientes de EL BANCO.
                        ");
            WriteLiteral(@"        </p>
                                <p class=""text-justify"">
                                    <u><b>CLÁUSULA NOVENA:</b></u> EL INVERSIONISTA conoce que EL PROVEEDOR declaró la existencia y legitimidad de los Derechos de Crédito Adquiridos y reflejados en la(s) factura(s) por él autorizadas, de conformidad con el artículo 124 del Código de Comercio.
                                </p>
                                <p class=""text-justify"">
                                    La información e instrucciones suministradas a través del Sistema Tufactoring, tendrán pleno valor probatorio y fuerza legal para acreditar la operación realizada, el importe de la misma, su naturaleza, así como las características y alcance de sus instrucciones. EL INVERSIONISTA conoce que el uso de los medios de identificación previstos en el contrato para realizar operaciones a través del Sistema, podrá equivaler a la firma autógrafa y producir los mismos efectos que las leyes otorgan a los documentos correspondiente");
            WriteLiteral(@"s.
                                </p>
                                <p class=""text-justify"">
                                    <u><b>CLÁUSULA DÉCIMA: </b></u> La aceptación de la oferta hecha por EL INVERSIONISTA por parte de EL PROVEEDOR y la concreción del pago dentro del plazo estipulado y en las condiciones determinadas en el presente instrumento, determinan la transmisión a EL INVERSIONISTA de todos los Derechos de Crédito sin reserva ni limitación alguna. EL INVERSIONISTA recibirá del propio sistema el contrato de la cesión a su favor hecha por EL PROVEEDOR.
                                </p>
                                <p class=""text-justify"">
                                    <u><b>CLÁUSULA DÉCIMA PRIMERA: </b></u> Para los efectos del presente Contrato, EL INVERSIONISTA señala como su domicilio el  indicado en el registro electrónico del Sistema Tufactoring; hasta tanto las partes intervinientes en la operación no se notifiquen por escrito los cambios de domicilio, todas las comun");
            WriteLiteral(@"icaciones que se practiquen en los domicilios antes citados, surtirán plenamente sus  efectos.
                                </p>
                                <p class=""text-justify"">
                                    <u><b>CLÁUSULA DÉCIMA SEGUNDA: </b></u> Para todos los efectos del presente contrato, sus derivados y consecuencias, se elige como domicilio especial aquel de la suscripción, aceptación o adhesión.
                                </p>
                            </v-card-text>
                            <v-card-actions>
                                <v-spacer></v-spacer>
                                <a class=""btn btn-danger btn-icon-split mr-2"" ");
            EndContext();
            BeginContext(123562, 283, true);
            WriteLiteral(@"@click=""dialogInversionista = false"">
                                    <span class=""icon text-white-50"">
                                        <i class=""fas fa-download""></i>
                                    </span>
                                    <span class=""text"">");
            EndContext();
            BeginContext(123846, 29, false);
#line 1200 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                  Write(Localizer.Text("buttonClose"));

#line default
#line hidden
            EndContext();
            BeginContext(123875, 81, true);
            WriteLiteral("</span>\r\n                                </a>\r\n\r\n                                ");
            EndContext();
            BeginContext(123956, 473, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a235622", async() => {
                BeginContext(124108, 246, true);
                WriteLiteral("\r\n                                    <span class=\"icon text-white-50\">\r\n                                        <i class=\"fas fa-download\"></i>\r\n                                    </span>\r\n                                    <span class=\"text\">");
                EndContext();
                BeginContext(124355, 29, false);
#line 1207 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
                                                  Write(Localizer.Text("buttonprint"));

#line default
#line hidden
                EndContext();
                BeginContext(124384, 41, true);
                WriteLiteral("</span>\r\n                                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_40);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_41);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_37);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(124429, 276, true);
            WriteLiteral(@"
                            </v-card-actions>
                        </v-card>
                    </v-dialog>
                    <!------------------------------------------------------ Fin -------------- -->
                </div>

            </div>
            ");
            EndContext();
            BeginContext(124706, 58, false);
#line 1216 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
       Write(await Html.PartialAsync("_ModalLogoutPartial", Model.NRol));

#line default
#line hidden
            EndContext();
            BeginContext(124764, 42, true);
            WriteLiteral("\r\n        </div>\r\n    </div>\r\n</v-app>\r\n\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(124829, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(124835, 114, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a238727", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_42.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_42);
#line 1223 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(124949, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(124955, 117, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebe1e44a76d00a13c0aa6c0d213b8809e4ab805a240835", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_43.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_43);
#line 1224 "C:\Users\truco\Desktop\tufactoring-frontend\TuFactoring\Areas\Profile\Pages\ActualizarEmpresa.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(125072, 2, true);
                WriteLiteral("\r\n");
                EndContext();
            }
            );
            BeginContext(125077, 2, true);
            WriteLiteral("\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public Utilities.CultureLocalizer Localizer { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TuFactoring.Areas.Profile.Pages.ActualizarEmpresaModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<TuFactoring.Areas.Profile.Pages.ActualizarEmpresaModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<TuFactoring.Areas.Profile.Pages.ActualizarEmpresaModel>)PageContext?.ViewData;
        public TuFactoring.Areas.Profile.Pages.ActualizarEmpresaModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
