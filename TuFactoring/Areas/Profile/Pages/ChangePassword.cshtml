@page
@using System.Globalization;
@model TuFactoring.Areas.Profile.Pages.ChangePasswordModel
@{
    ViewData["Title"] = @Localizer.Text("titleChangePassword");
    Layout = "~/Pages/Shared/_Layout.cshtml";
    var culture = System.Globalization.CultureInfo.CurrentCulture.Name;


    switch (@Model.TipoParticipante)
    {
        case "CONFIRMANT":
            ViewData["Sidebar"] = "dark";
            break;
        case "DEBTOR":
            ViewData["Sidebar"] = "primary";
            break;
        case "FACTOR":
            ViewData["Sidebar"] = "warning";
            break;
        case "SUPPLIER":
            ViewData["Sidebar"] = "purple";
            break;
        default:
            ViewData["Sidebar"] = "navy";
            break;
    }

    int contador = 0;

}



<div hidden id="mensajesPoppup">
    <input value="@Model.exito" id="mensajeExito" />

    @{
        foreach (var error in Model.errores)
        {
            <input value="@Localizer.Text(error)" id="mensajeError-@contador" />
            contador++;
        }
    }

</div>

<v-app id="app" hidden>

    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">
            <a href="#" style="color:#fff !important" class="btn btn-success btn-circle">
                <i class="far fa-id-badge"></i>
            </a>
            &nbsp;@Localizer.Text("titleChangePassword")
        </h1>
    </div>
    <p class="mb-4">
        <span>
            @Localizer.Text("textChangePassword")
        </span>
    </p>

    <div class="row justify-content-center">
        <div class="col-md-5 col-lg-5 col-sm-12">
            <div class="card shadow mb-4">
                <div class="card-header">
                    <h6 class="m-0 font-weight-bold text-primary">
                        @Localizer.Text("titleChangeToPassword")
                    </h6>
                </div>
                <div class="card-body">
                    <form class="user" method="post" id="account">
                        <div class="form-group">
                            <input asp-for="Input.Email" type="email" readonly class="form-control form-control-user" id="exampleInputEmail" aria-describedby="emailHelp" placeholder="@Localizer.Text("placeholderEmail")" />
                            <span asp-validation-for="Input.Email" class="small text-danger"></span>
                        </div>
                        <div class="form-group">
                            <input asp-for="Input.Password" class="form-control form-control-user" onblur="validarPrimeraVezInput('inputPassword','messagePasssword')" id="inputPassword" aria-describedby="passwordlHelp" placeholder="@Localizer.Text("placeholderNewPassword")" />
                            <span asp-validation-for="Input.Password" class="small text-danger" id="messagePasssword"></span>
                        </div>
                        <div class="form-group">
                            <input asp-for="Input.ConfirmPassword" class="form-control form-control-user" onblur="validarPrimeraVezInput('InputConfirmPassword','messageConfirmPassword')" id="InputConfirmPassword" aria-describedby="confirmPasswordlHelp" placeholder="@Localizer.Text("placeholderConfirmPassword")" />
                            <span asp-validation-for="Input.ConfirmPassword" id="messageConfirmPassword" class="small text-danger"></span>
                        </div>
                        <button type="submit" class="btn btn-primary btn-user btn-block">@Localizer.Text("buttonChangePassword")</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    @await Html.PartialAsync("_ModalLogoutPartial", 1)
</v-app>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />


    <script>
        new Vue({
            el: "#app",
            vuetify: new Vuetify({
                lang: {
                    t: (key, ...params) => i18n.t(key, params)
                }
            }),
            data: {
                modalLogout: { mostrar: false },
            },
            created: function () {
                document.getElementById("app").removeAttribute("hidden")
            },
            mounted: function () {
                tiempoLogin(this.modalLogout)
            }
        })
    </script>

}
